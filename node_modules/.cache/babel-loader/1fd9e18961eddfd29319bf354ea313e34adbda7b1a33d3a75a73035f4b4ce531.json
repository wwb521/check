{"ast":null,"code":"export default {\n  name: 'StreamCheck',\n  data() {\n    return {\n      // No changes to data section\n    };\n  },\n  computed: {\n    // No changes to computed section\n  },\n  created() {\n    // No changes to created section\n  },\n  beforeDestroy() {\n    // No changes to beforeDestroy section\n  },\n  methods: {\n    async handleSync() {\n      try {\n        await this.$refs.syncForm.validate();\n\n        // 保存设置\n        localStorage.setItem('githubToken', this.syncForm.token);\n        localStorage.setItem('githubRepo', this.syncForm.repo);\n        localStorage.setItem('githubTxtPath', this.syncForm.txtPath);\n        localStorage.setItem('githubM3uPath', this.syncForm.m3uPath);\n        localStorage.setItem('githubAutoSync', this.syncForm.autoSync);\n        localStorage.setItem('githubSyncType', this.syncForm.syncType);\n        localStorage.setItem('githubExecuteTime', this.syncForm.executeTime);\n        localStorage.setItem('githubWeekDay', this.syncForm.weekDay);\n\n        // 同步 TXT 内容\n        const txtContent = this.generateContent('txt');\n        await this.syncToGithub(txtContent, this.syncForm.txtPath);\n\n        // 同步 M3U 内容\n        const m3uContent = this.generateContent('m3u');\n        await this.syncToGithub(m3uContent, this.syncForm.m3uPath);\n        this.$message.success('同步成功');\n        this.syncDialogVisible = false;\n      } catch (error) {\n        this.$message.error(error.message || '同步失败');\n      }\n    },\n    async syncToGithub(content, path) {\n      const response = await fetch(`${this.getBaseUrl()}/api/sync-github`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token: this.syncForm.token,\n          repo: this.syncForm.repo,\n          path: path,\n          content: content,\n          message: this.syncForm.message\n        })\n      });\n      if (!response.ok) {\n        throw new Error('同步失败');\n      }\n    }\n    // No changes to other methods\n  },\n  watch: {\n    // No changes to watch section\n  }\n  // No changes to other sections\n};","map":{"version":3,"names":["name","data","computed","created","beforeDestroy","methods","handleSync","$refs","syncForm","validate","localStorage","setItem","token","repo","txtPath","m3uPath","autoSync","syncType","executeTime","weekDay","txtContent","generateContent","syncToGithub","m3uContent","$message","success","syncDialogVisible","error","message","content","path","response","fetch","getBaseUrl","method","headers","body","JSON","stringify","ok","Error","watch"],"sources":["src/components/StreamCheck.vue"],"sourcesContent":["<template>\n  <!-- No changes to template section -->\n</template>\n\n<script>\nexport default {\n  name: 'StreamCheck',\n  data() {\n    return {\n      // No changes to data section\n    }\n  },\n  computed: {\n    // No changes to computed section\n  },\n  created() {\n    // No changes to created section\n  },\n  beforeDestroy() {\n    // No changes to beforeDestroy section\n  },\n  methods: {\n    async handleSync() {\n      try {\n        await this.$refs.syncForm.validate()\n        \n        // 保存设置\n        localStorage.setItem('githubToken', this.syncForm.token)\n        localStorage.setItem('githubRepo', this.syncForm.repo)\n        localStorage.setItem('githubTxtPath', this.syncForm.txtPath)\n        localStorage.setItem('githubM3uPath', this.syncForm.m3uPath)\n        localStorage.setItem('githubAutoSync', this.syncForm.autoSync)\n        localStorage.setItem('githubSyncType', this.syncForm.syncType)\n        localStorage.setItem('githubExecuteTime', this.syncForm.executeTime)\n        localStorage.setItem('githubWeekDay', this.syncForm.weekDay)\n        \n        // 同步 TXT 内容\n        const txtContent = this.generateContent('txt')\n        await this.syncToGithub(txtContent, this.syncForm.txtPath)\n        \n        // 同步 M3U 内容\n        const m3uContent = this.generateContent('m3u')\n        await this.syncToGithub(m3uContent, this.syncForm.m3uPath)\n        \n        this.$message.success('同步成功')\n        this.syncDialogVisible = false\n      } catch (error) {\n        this.$message.error(error.message || '同步失败')\n      }\n    },\n    async syncToGithub(content, path) {\n      const response = await fetch(`${this.getBaseUrl()}/api/sync-github`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token: this.syncForm.token,\n          repo: this.syncForm.repo,\n          path: path,\n          content: content,\n          message: this.syncForm.message\n        })\n      })\n      \n      if (!response.ok) {\n        throw new Error('同步失败')\n      }\n    },\n    // No changes to other methods\n  },\n  watch: {\n    // No changes to watch section\n  },\n  // No changes to other sections\n}\n</script>\n\n<style scoped>\n/* No changes to style section */\n</style> "],"mappings":"AAKA;EACAA,IAAA;EACAC,KAAA;IACA;MACA;IAAA,CACA;EACA;EACAC,QAAA;IACA;EAAA,CACA;EACAC,QAAA;IACA;EAAA,CACA;EACAC,cAAA;IACA;EAAA,CACA;EACAC,OAAA;IACA,MAAAC,WAAA;MACA;QACA,WAAAC,KAAA,CAAAC,QAAA,CAAAC,QAAA;;QAEA;QACAC,YAAA,CAAAC,OAAA,qBAAAH,QAAA,CAAAI,KAAA;QACAF,YAAA,CAAAC,OAAA,oBAAAH,QAAA,CAAAK,IAAA;QACAH,YAAA,CAAAC,OAAA,uBAAAH,QAAA,CAAAM,OAAA;QACAJ,YAAA,CAAAC,OAAA,uBAAAH,QAAA,CAAAO,OAAA;QACAL,YAAA,CAAAC,OAAA,wBAAAH,QAAA,CAAAQ,QAAA;QACAN,YAAA,CAAAC,OAAA,wBAAAH,QAAA,CAAAS,QAAA;QACAP,YAAA,CAAAC,OAAA,2BAAAH,QAAA,CAAAU,WAAA;QACAR,YAAA,CAAAC,OAAA,uBAAAH,QAAA,CAAAW,OAAA;;QAEA;QACA,MAAAC,UAAA,QAAAC,eAAA;QACA,WAAAC,YAAA,CAAAF,UAAA,OAAAZ,QAAA,CAAAM,OAAA;;QAEA;QACA,MAAAS,UAAA,QAAAF,eAAA;QACA,WAAAC,YAAA,CAAAC,UAAA,OAAAf,QAAA,CAAAO,OAAA;QAEA,KAAAS,QAAA,CAAAC,OAAA;QACA,KAAAC,iBAAA;MACA,SAAAC,KAAA;QACA,KAAAH,QAAA,CAAAG,KAAA,CAAAA,KAAA,CAAAC,OAAA;MACA;IACA;IACA,MAAAN,aAAAO,OAAA,EAAAC,IAAA;MACA,MAAAC,QAAA,SAAAC,KAAA,SAAAC,UAAA;QACAC,MAAA;QACAC,OAAA;UACA;QACA;QACAC,IAAA,EAAAC,IAAA,CAAAC,SAAA;UACA1B,KAAA,OAAAJ,QAAA,CAAAI,KAAA;UACAC,IAAA,OAAAL,QAAA,CAAAK,IAAA;UACAiB,IAAA,EAAAA,IAAA;UACAD,OAAA,EAAAA,OAAA;UACAD,OAAA,OAAApB,QAAA,CAAAoB;QACA;MACA;MAEA,KAAAG,QAAA,CAAAQ,EAAA;QACA,UAAAC,KAAA;MACA;IACA;IACA;EACA;EACAC,KAAA;IACA;EAAA;EAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}