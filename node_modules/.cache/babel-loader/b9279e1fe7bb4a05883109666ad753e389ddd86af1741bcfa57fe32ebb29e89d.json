{"ast":null,"code":"export default {\n  name: 'StreamSource',\n  data() {\n    return {\n      streamUrl: '',\n      dialogVisible: false,\n      generatedLink: ''\n    };\n  },\n  methods: {\n    generateLink() {\n      if (this.streamUrl.trim()) {\n        // 创建一个 Blob 对象，包含文本框中的内容\n        const blob = new Blob([this.streamUrl.trim()], {\n          type: 'text/plain'\n        });\n        // 创建一个临时的 URL，指向这个 Blob\n        const url = URL.createObjectURL(blob);\n        // 将这个临时 URL 作为生成的链接\n        this.generatedLink = url;\n        this.dialogVisible = true;\n\n        // 在组件销毁时释放 URL\n        this.$once('hook:beforeDestroy', () => {\n          URL.revokeObjectURL(url);\n        });\n      } else {\n        this.$message({\n          message: '请输入直播源地址',\n          type: 'warning',\n          duration: 2000\n        });\n      }\n    },\n    copyLink() {\n      navigator.clipboard.writeText(this.generatedLink).then(() => {\n        this.$message({\n          message: '链接已复制到剪贴板',\n          type: 'success',\n          duration: 2000\n        });\n      }).catch(() => {\n        this.$message({\n          message: '复制失败，请手动复制',\n          type: 'error',\n          duration: 2000\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","streamUrl","dialogVisible","generatedLink","methods","generateLink","trim","blob","Blob","type","url","URL","createObjectURL","$once","revokeObjectURL","$message","message","duration","copyLink","navigator","clipboard","writeText","then","catch"],"sources":["src/views/StreamSource.vue"],"sourcesContent":["<script>\r\nexport default {\r\n  name: 'StreamSource',\r\n  data() {\r\n    return {\r\n      streamUrl: '',\r\n      dialogVisible: false,\r\n      generatedLink: ''\r\n    }\r\n  },\r\n  methods: {\r\n    generateLink() {\r\n      if (this.streamUrl.trim()) {\r\n        // 创建一个 Blob 对象，包含文本框中的内容\r\n        const blob = new Blob([this.streamUrl.trim()], { type: 'text/plain' });\r\n        // 创建一个临时的 URL，指向这个 Blob\r\n        const url = URL.createObjectURL(blob);\r\n        // 将这个临时 URL 作为生成的链接\r\n        this.generatedLink = url;\r\n        this.dialogVisible = true;\r\n\r\n        // 在组件销毁时释放 URL\r\n        this.$once('hook:beforeDestroy', () => {\r\n          URL.revokeObjectURL(url);\r\n        });\r\n      } else {\r\n        this.$message({\r\n          message: '请输入直播源地址',\r\n          type: 'warning',\r\n          duration: 2000\r\n        });\r\n      }\r\n    },\r\n    copyLink() {\r\n      navigator.clipboard.writeText(this.generatedLink)\r\n        .then(() => {\r\n          this.$message({\r\n            message: '链接已复制到剪贴板',\r\n            type: 'success',\r\n            duration: 2000\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.$message({\r\n            message: '复制失败，请手动复制',\r\n            type: 'error',\r\n            duration: 2000\r\n          });\r\n        });\r\n    }\r\n  }\r\n}\r\n</script> "],"mappings":"AACA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,aAAA;MACAC,aAAA;IACA;EACA;EACAC,OAAA;IACAC,aAAA;MACA,SAAAJ,SAAA,CAAAK,IAAA;QACA;QACA,MAAAC,IAAA,OAAAC,IAAA,OAAAP,SAAA,CAAAK,IAAA;UAAAG,IAAA;QAAA;QACA;QACA,MAAAC,GAAA,GAAAC,GAAA,CAAAC,eAAA,CAAAL,IAAA;QACA;QACA,KAAAJ,aAAA,GAAAO,GAAA;QACA,KAAAR,aAAA;;QAEA;QACA,KAAAW,KAAA;UACAF,GAAA,CAAAG,eAAA,CAAAJ,GAAA;QACA;MACA;QACA,KAAAK,QAAA;UACAC,OAAA;UACAP,IAAA;UACAQ,QAAA;QACA;MACA;IACA;IACAC,SAAA;MACAC,SAAA,CAAAC,SAAA,CAAAC,SAAA,MAAAlB,aAAA,EACAmB,IAAA;QACA,KAAAP,QAAA;UACAC,OAAA;UACAP,IAAA;UACAQ,QAAA;QACA;MACA,GACAM,KAAA;QACA,KAAAR,QAAA;UACAC,OAAA;UACAP,IAAA;UACAQ,QAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}