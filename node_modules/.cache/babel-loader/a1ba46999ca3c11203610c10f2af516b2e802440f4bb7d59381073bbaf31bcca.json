{"ast":null,"code":"export default {\n  name: 'PageHeader',\n  data() {\n    return {\n      localIp: '',\n      isp: '',\n      ipv6Support: false,\n      ipv6Loading: true,\n      checkTimer: null\n    };\n  },\n  mounted() {\n    this.getLocalIp();\n    this.checkIpv6Support();\n  },\n  beforeDestroy() {\n    if (this.checkTimer) {\n      clearTimeout(this.checkTimer);\n    }\n  },\n  methods: {\n    async getLocalIp() {\n      try {\n        const response = await fetch('http://localhost:8080/api/local-ip');\n        if (response.ok) {\n          const data = await response.json();\n          this.localIp = data.ip;\n          this.isp = data.isp;\n        }\n      } catch (error) {\n        console.error('获取IP失败:', error);\n      }\n    },\n    copyIp() {\n      if (this.localIp) {\n        const textarea = document.createElement('textarea');\n        textarea.value = this.localIp;\n        document.body.appendChild(textarea);\n        textarea.select();\n        try {\n          document.execCommand('copy');\n          this.$message.success('IP地址已复制');\n        } catch (err) {\n          this.$message.error('复制失败');\n        } finally {\n          document.body.removeChild(textarea);\n        }\n      }\n    },\n    async checkIpv6Support() {\n      this.ipv6Loading = true;\n      try {\n        const response = await fetch('/api/check-ipv6');\n        if (response.ok) {\n          const data = await response.json();\n          this.ipv6Support = data.supported;\n        }\n      } catch (error) {\n        console.error('检测IPV6支持失败:', error);\n        this.ipv6Support = false;\n      } finally {\n        this.ipv6Loading = false;\n        // 每5分钟重新检测一次\n        this.checkTimer = setTimeout(() => {\n          this.checkIpv6Support();\n        }, 5 * 60 * 1000);\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","localIp","isp","ipv6Support","ipv6Loading","checkTimer","mounted","getLocalIp","checkIpv6Support","beforeDestroy","clearTimeout","methods","response","fetch","ok","json","ip","error","console","copyIp","textarea","document","createElement","value","body","appendChild","select","execCommand","$message","success","err","removeChild","supported","setTimeout"],"sources":["src/components/Header.vue"],"sourcesContent":["<template>\n  <div class=\"header\">\n    <div class=\"logo\">\n      <i class=\"el-icon-video-camera\"></i>\n      <span class=\"title\">媒体流检测工具</span>\n    </div>\n    <div class=\"header-right\">\n      <div class=\"ip-info\" v-if=\"localIp\">\n        <el-tooltip effect=\"dark\" placement=\"bottom\">\n          <div slot=\"content\">\n            <div>本机IP地址</div>\n            <div>{{ isp }}</div>\n            <div>点击复制</div>\n          </div>\n          <el-tag \n            type=\"info\" \n            @click=\"copyIp\"\n            style=\"cursor: pointer\">\n            {{ localIp }}\n          </el-tag>\n        </el-tooltip>\n      </div>\n      <el-tooltip :content=\"ipv6Loading ? '正在检测IPV6支持状态...' : '当前网络IPV6支持状态'\" placement=\"bottom\">\n        <div class=\"ipv6-status\" :class=\"{ 'is-supported': ipv6Support, 'is-loading': ipv6Loading }\">\n          <i v-if=\"!ipv6Loading\" :class=\"ipv6Support ? 'el-icon-check' : 'el-icon-close'\"></i>\n          <i v-else class=\"el-icon-loading\"></i>\n          IPV6{{ ipv6Loading ? '检测中' : (ipv6Support ? '支持' : '不支持') }}\n        </div>\n      </el-tooltip>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'PageHeader',\n  data() {\n    return {\n      localIp: '',\n      isp: '',\n      ipv6Support: false,\n      ipv6Loading: true,\n      checkTimer: null\n    }\n  },\n  mounted() {\n    this.getLocalIp()\n    this.checkIpv6Support()\n  },\n  beforeDestroy() {\n    if (this.checkTimer) {\n      clearTimeout(this.checkTimer)\n    }\n  },\n  methods: {\n    async getLocalIp() {\n      try {\n        const response = await fetch('http://localhost:8080/api/local-ip')\n        if (response.ok) {\n          const data = await response.json()\n          this.localIp = data.ip\n          this.isp = data.isp\n        }\n      } catch (error) {\n        console.error('获取IP失败:', error)\n      }\n    },\n    copyIp() {\n      if (this.localIp) {\n        const textarea = document.createElement('textarea')\n        textarea.value = this.localIp\n        document.body.appendChild(textarea)\n        textarea.select()\n        \n        try {\n          document.execCommand('copy')\n          this.$message.success('IP地址已复制')\n        } catch (err) {\n          this.$message.error('复制失败')\n        } finally {\n          document.body.removeChild(textarea)\n        }\n      }\n    },\n    async checkIpv6Support() {\n      this.ipv6Loading = true\n      try {\n        const response = await fetch('/api/check-ipv6')\n        if (response.ok) {\n          const data = await response.json()\n          this.ipv6Support = data.supported\n        }\n      } catch (error) {\n        console.error('检测IPV6支持失败:', error)\n        this.ipv6Support = false\n      } finally {\n        this.ipv6Loading = false\n        // 每5分钟重新检测一次\n        this.checkTimer = setTimeout(() => {\n          this.checkIpv6Support()\n        }, 5 * 60 * 1000)\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 24px;\n  height: 52px;\n  background-color: #001529;\n  box-shadow: 0 1px 4px rgba(0,21,41,.08);\n}\n\n.logo {\n  display: flex;\n  align-items: center;\n}\n\n.logo i {\n  font-size: 24px;\n  color: #fff;\n}\n\n.title {\n  margin-left: 14px;\n  font-size: 18px;\n  font-weight: 500;\n  color: white;\n  letter-spacing: 0.5px;\n}\n\n.header-right {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.ip-info .el-tag {\n  background-color: #1890ff;\n  border-color: #1890ff;\n  color: white;\n  font-size: 13px;\n  height: 28px;\n  line-height: 28px;\n  padding: 0 12px;\n  border-radius: 2px;\n}\n\n.ip-info .el-tag:hover {\n  background-color: #40a9ff;\n  border-color: #40a9ff;\n}\n\n.ipv6-status {\n  display: inline-flex;\n  align-items: center;\n  padding: 0 10px;\n  height: 28px;\n  line-height: 28px;\n  background: #f56c6c;\n  color: #fff;\n  border-radius: 2px;\n  font-size: 13px;\n  transition: all 0.3s ease;\n}\n\n.ipv6-status.is-supported {\n  background: #67c23a;\n}\n\n.ipv6-status.is-loading {\n  background: #909399;\n}\n\n.ipv6-status i {\n  margin-right: 4px;\n  font-size: 13px;\n}\n\n@keyframes rotating {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.el-icon-loading {\n  animation: rotating 2s linear infinite;\n}\n</style> "],"mappings":"AAkCA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,GAAA;MACAC,WAAA;MACAC,WAAA;MACAC,UAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,UAAA;IACA,KAAAC,gBAAA;EACA;EACAC,cAAA;IACA,SAAAJ,UAAA;MACAK,YAAA,MAAAL,UAAA;IACA;EACA;EACAM,OAAA;IACA,MAAAJ,WAAA;MACA;QACA,MAAAK,QAAA,SAAAC,KAAA;QACA,IAAAD,QAAA,CAAAE,EAAA;UACA,MAAAd,IAAA,SAAAY,QAAA,CAAAG,IAAA;UACA,KAAAd,OAAA,GAAAD,IAAA,CAAAgB,EAAA;UACA,KAAAd,GAAA,GAAAF,IAAA,CAAAE,GAAA;QACA;MACA,SAAAe,KAAA;QACAC,OAAA,CAAAD,KAAA,YAAAA,KAAA;MACA;IACA;IACAE,OAAA;MACA,SAAAlB,OAAA;QACA,MAAAmB,QAAA,GAAAC,QAAA,CAAAC,aAAA;QACAF,QAAA,CAAAG,KAAA,QAAAtB,OAAA;QACAoB,QAAA,CAAAG,IAAA,CAAAC,WAAA,CAAAL,QAAA;QACAA,QAAA,CAAAM,MAAA;QAEA;UACAL,QAAA,CAAAM,WAAA;UACA,KAAAC,QAAA,CAAAC,OAAA;QACA,SAAAC,GAAA;UACA,KAAAF,QAAA,CAAAX,KAAA;QACA;UACAI,QAAA,CAAAG,IAAA,CAAAO,WAAA,CAAAX,QAAA;QACA;MACA;IACA;IACA,MAAAZ,iBAAA;MACA,KAAAJ,WAAA;MACA;QACA,MAAAQ,QAAA,SAAAC,KAAA;QACA,IAAAD,QAAA,CAAAE,EAAA;UACA,MAAAd,IAAA,SAAAY,QAAA,CAAAG,IAAA;UACA,KAAAZ,WAAA,GAAAH,IAAA,CAAAgC,SAAA;QACA;MACA,SAAAf,KAAA;QACAC,OAAA,CAAAD,KAAA,gBAAAA,KAAA;QACA,KAAAd,WAAA;MACA;QACA,KAAAC,WAAA;QACA;QACA,KAAAC,UAAA,GAAA4B,UAAA;UACA,KAAAzB,gBAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}