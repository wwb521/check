{"ast":null,"code":"export default {\n  name: 'StreamCheck',\n  data() {\n    return {\n      // No changes to data section\n    };\n  },\n  computed: {\n    // No changes to computed section\n  },\n  created() {\n    // No changes to created section\n    // If GitHub auto sync is enabled, set up the schedule\n    if (localStorage.getItem('githubAutoSync') === 'true') {\n      this.setupSyncSchedule();\n    }\n  },\n  beforeDestroy() {\n    // No changes to beforeDestroy section\n    this.clearSyncSchedule();\n  },\n  methods: {\n    setupSyncSchedule() {\n      this.clearSyncSchedule();\n      this.syncTimer = setInterval(() => {\n        const now = new Date();\n        const [hours, minutes] = this.syncForm.executeTime.split(':').map(Number);\n        if (now.getHours() === hours && now.getMinutes() === minutes && now.getSeconds() === 0) {\n          if (this.syncForm.syncType === 'weekly') {\n            if (now.getDay().toString() === this.syncForm.weekDay) {\n              this.handleSync();\n            }\n          } else {\n            this.handleSync();\n          }\n        }\n      }, 1000); // 每秒检查一次\n    },\n    clearSyncSchedule() {\n      if (this.syncTimer) {\n        clearInterval(this.syncTimer);\n        this.syncTimer = null;\n      }\n    }\n  },\n  watch: {\n    // No changes to watch section\n  }\n  // No changes to other sections\n};","map":{"version":3,"names":["name","data","computed","created","localStorage","getItem","setupSyncSchedule","beforeDestroy","clearSyncSchedule","methods","syncTimer","setInterval","now","Date","hours","minutes","syncForm","executeTime","split","map","Number","getHours","getMinutes","getSeconds","syncType","getDay","toString","weekDay","handleSync","clearInterval","watch"],"sources":["src/components/StreamCheck.vue"],"sourcesContent":["<template>\n  <!-- No changes to template section -->\n</template>\n\n<script>\nexport default {\n  name: 'StreamCheck',\n  data() {\n    return {\n      // No changes to data section\n    }\n  },\n  computed: {\n    // No changes to computed section\n  },\n  created() {\n    // No changes to created section\n    // If GitHub auto sync is enabled, set up the schedule\n    if (localStorage.getItem('githubAutoSync') === 'true') {\n      this.setupSyncSchedule()\n    }\n  },\n  beforeDestroy() {\n    // No changes to beforeDestroy section\n        this.clearSyncSchedule()\n    },\n  methods: {\n    setupSyncSchedule() {\n      this.clearSyncSchedule()\n      this.syncTimer = setInterval(() => {\n        const now = new Date()\n        const [hours, minutes] = this.syncForm.executeTime.split(':').map(Number)\n        \n        if (now.getHours() === hours && \n            now.getMinutes() === minutes && \n            now.getSeconds() === 0) {\n          if (this.syncForm.syncType === 'weekly') {\n            if (now.getDay().toString() === this.syncForm.weekDay) {\n              this.handleSync()\n            }\n          } else {\n            this.handleSync()\n          }\n        }\n      }, 1000) // 每秒检查一次\n    },\n    clearSyncSchedule() {\n      if (this.syncTimer) {\n        clearInterval(this.syncTimer)\n        this.syncTimer = null\n      }\n    }\n  },\n  watch: {\n    // No changes to watch section\n  },\n  // No changes to other sections\n}\n</script>\n\n<style scoped>\n/* No changes to style section */\n</style> "],"mappings":"AAKA;EACAA,IAAA;EACAC,KAAA;IACA;MACA;IAAA,CACA;EACA;EACAC,QAAA;IACA;EAAA,CACA;EACAC,QAAA;IACA;IACA;IACA,IAAAC,YAAA,CAAAC,OAAA;MACA,KAAAC,iBAAA;IACA;EACA;EACAC,cAAA;IACA;IACA,KAAAC,iBAAA;EACA;EACAC,OAAA;IACAH,kBAAA;MACA,KAAAE,iBAAA;MACA,KAAAE,SAAA,GAAAC,WAAA;QACA,MAAAC,GAAA,OAAAC,IAAA;QACA,OAAAC,KAAA,EAAAC,OAAA,SAAAC,QAAA,CAAAC,WAAA,CAAAC,KAAA,MAAAC,GAAA,CAAAC,MAAA;QAEA,IAAAR,GAAA,CAAAS,QAAA,OAAAP,KAAA,IACAF,GAAA,CAAAU,UAAA,OAAAP,OAAA,IACAH,GAAA,CAAAW,UAAA;UACA,SAAAP,QAAA,CAAAQ,QAAA;YACA,IAAAZ,GAAA,CAAAa,MAAA,GAAAC,QAAA,YAAAV,QAAA,CAAAW,OAAA;cACA,KAAAC,UAAA;YACA;UACA;YACA,KAAAA,UAAA;UACA;QACA;MACA;IACA;IACApB,kBAAA;MACA,SAAAE,SAAA;QACAmB,aAAA,MAAAnB,SAAA;QACA,KAAAA,SAAA;MACA;IACA;EACA;EACAoB,KAAA;IACA;EAAA;EAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}