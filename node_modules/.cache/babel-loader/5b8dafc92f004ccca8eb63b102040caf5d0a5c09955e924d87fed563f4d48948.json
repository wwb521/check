{"ast":null,"code":"export default {\n  name: 'StreamCheck',\n  data() {\n    return {\n      // ... 其他数据保持不变 ...\n      generateForm: {\n        format: 'txt' // 默认txt格式\n      }\n    };\n  },\n  methods: {\n    // ... 其他方法保持不变 ...\n\n    // 修改生成内容的方法\n    generateContent() {\n      return this.generateForm.format === 'm3u' ? this.generateM3uContent() : this.generateTxtContent();\n    },\n    // 原来的txt格式生成方法改名\n    generateTxtContent() {\n      let content = '';\n      let currentGroup = '';\n      this.mergedStreams.forEach(stream => {\n        if (stream.group !== currentGroup) {\n          currentGroup = stream.group;\n          content += `${currentGroup},#genre#\\n`;\n        }\n        content += `${stream.name},${stream.urls.join('#')}\\n`;\n      });\n      return content.trim();\n    },\n    // 新增m3u格式生成方法\n    generateM3uContent() {\n      let content = '#EXTM3U\\n';\n      let currentGroup = '';\n      this.mergedStreams.forEach(stream => {\n        // 处理分组变化\n        if (stream.group !== currentGroup) {\n          currentGroup = stream.group;\n        }\n\n        // 为每个URL生成一个条目\n        stream.urls.forEach(url => {\n          content += `#EXTINF:-1 group-title=\"${stream.group}\",${stream.name}\\n`;\n          content += `${url}\\n`;\n        });\n      });\n      return content.trim();\n    }\n  }\n};","map":{"version":3,"names":["name","data","generateForm","format","methods","generateContent","generateM3uContent","generateTxtContent","content","currentGroup","mergedStreams","forEach","stream","group","urls","join","trim","url"],"sources":["src/components/StreamCheck.vue"],"sourcesContent":["<template>\r\n  <div class=\"stream-check\">\r\n    <!-- ... 其他按钮和表格内容保持不变 ... -->\r\n\r\n    <!-- 修改生成链接对话框 -->\r\n    <el-dialog\r\n      title=\"生成链接\"\r\n      :visible.sync=\"generateLinkDialogVisible\"\r\n      width=\"500px\"\r\n      custom-class=\"generate-link-dialog\">\r\n      <div class=\"link-container\">\r\n        <!-- 格式选择 -->\r\n        <el-form :model=\"generateForm\" label-width=\"80px\">\r\n          <el-form-item label=\"文件格式\">\r\n            <el-radio-group v-model=\"generateForm.format\">\r\n              <el-radio label=\"txt\">TXT格式</el-radio>\r\n              <el-radio label=\"m3u\">M3U格式</el-radio>\r\n            </el-radio-group>\r\n          </el-form-item>\r\n        </el-form>\r\n\r\n        <!-- 链接展示卡片 -->\r\n        <el-card class=\"link-card\">\r\n          <div class=\"link-content\">\r\n            <el-input\r\n              v-model=\"generatedLink\"\r\n              placeholder=\"正在生成链接...\"\r\n              readonly>\r\n              <template slot=\"prepend\">链接地址</template>\r\n              <el-button \r\n                slot=\"append\" \r\n                icon=\"el-icon-document-copy\"\r\n                @click=\"copyGeneratedLink\">\r\n                复制\r\n              </el-button>\r\n            </el-input>\r\n          </div>\r\n        </el-card>\r\n\r\n        <!-- 使用说明 -->\r\n        <el-card class=\"tips-card\">\r\n          <div class=\"tips-content\">\r\n            <ul>\r\n              <li>生成的链接可以直接在支持网络导入的播放器中使用</li>\r\n              <li>链接内容会随列表更新而自动更新</li>\r\n              <li>M3U格式更适合IPTV播放器使用</li>\r\n            </ul>\r\n          </div>\r\n        </el-card>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'StreamCheck',\r\n  data() {\r\n    return {\r\n      // ... 其他数据保持不变 ...\r\n      generateForm: {\r\n        format: 'txt'  // 默认txt格式\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    // ... 其他方法保持不变 ...\r\n    \r\n    // 修改生成内容的方法\r\n    generateContent() {\r\n      return this.generateForm.format === 'm3u' \r\n        ? this.generateM3uContent() \r\n        : this.generateTxtContent()\r\n    },\r\n\r\n    // 原来的txt格式生成方法改名\r\n    generateTxtContent() {\r\n      let content = ''\r\n      let currentGroup = ''\r\n      \r\n      this.mergedStreams.forEach(stream => {\r\n        if (stream.group !== currentGroup) {\r\n          currentGroup = stream.group\r\n          content += `${currentGroup},#genre#\\n`\r\n        }\r\n        content += `${stream.name},${stream.urls.join('#')}\\n`\r\n      })\r\n      \r\n      return content.trim()\r\n    },\r\n\r\n    // 新增m3u格式生成方法\r\n    generateM3uContent() {\r\n      let content = '#EXTM3U\\n'\r\n      let currentGroup = ''\r\n      \r\n      this.mergedStreams.forEach(stream => {\r\n        // 处理分组变化\r\n        if (stream.group !== currentGroup) {\r\n          currentGroup = stream.group\r\n        }\r\n        \r\n        // 为每个URL生成一个条目\r\n        stream.urls.forEach(url => {\r\n          content += `#EXTINF:-1 group-title=\"${stream.group}\",${stream.name}\\n`\r\n          content += `${url}\\n`\r\n        })\r\n      })\r\n      \r\n      return content.trim()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.stream-check {\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n}\r\n\r\n.table-operations {\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  gap: 10px; /* 按钮组之间的间距 */\r\n}\r\n\r\n.pagination-container {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.el-button [class*=\"el-icon-\"] {\r\n  font-size: 18px;\r\n}\r\n\r\n.delete-btn {\r\n  color: #F56C6C;\r\n}\r\n\r\n.delete-btn:hover {\r\n  color: #ff4d4d;\r\n}\r\n\r\n.setting-tip {\r\n  margin-left: 10px;\r\n  color: #909399;\r\n  font-size: 13px;\r\n}\r\n\r\n.link-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n\r\n.link-info p {\r\n  margin: 0;\r\n  color: #606266;\r\n}\r\n\r\n.link-actions {\r\n  display: flex;\r\n  gap: 10px;\r\n  justify-content: flex-end;\r\n  margin-top: 10px;\r\n}\r\n\r\n/* 生成链接对话框样式 */\r\n.generate-link-dialog {\r\n  max-width: 600px;\r\n}\r\n\r\n.link-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n}\r\n\r\n.link-card, .tips-card {\r\n  margin: 0;\r\n  border: 1px solid #EBEEF5;\r\n}\r\n\r\n.link-content {\r\n  padding: 10px;\r\n}\r\n\r\n.tips-content {\r\n  color: #606266;\r\n  font-size: 14px;\r\n  padding: 10px;\r\n}\r\n\r\n.tips-content ul {\r\n  margin: 0;\r\n  padding-left: 20px;\r\n  line-height: 1.8;\r\n}\r\n\r\n/* 覆盖 element-ui 的一些默认样式 */\r\n:deep(.el-dialog__body) {\r\n  padding: 20px;\r\n}\r\n\r\n:deep(.el-card__header) {\r\n  padding: 12px 20px;\r\n  font-weight: 500;\r\n}\r\n\r\n:deep(.el-card__body) {\r\n  padding: 15px;\r\n}\r\n\r\n/* 可以添加一些自定义样式 */\r\n.el-tag {\r\n  width: 90px;  /* 统一标签宽度 */\r\n}\r\n\r\n.el-tag + .el-tag {\r\n  margin-left: 4px;\r\n}\r\n\r\n/* 添加一些新的样式 */\r\n.el-radio-group {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  width: 100%;\r\n}\r\n\r\n.el-form-item {\r\n  margin-bottom: 15px;\r\n}\r\n</style> "],"mappings":"AAuDA;EACAA,IAAA;EACAC,KAAA;IACA;MACA;MACAC,YAAA;QACAC,MAAA;MACA;IACA;EACA;EACAC,OAAA;IACA;;IAEA;IACAC,gBAAA;MACA,YAAAH,YAAA,CAAAC,MAAA,aACA,KAAAG,kBAAA,KACA,KAAAC,kBAAA;IACA;IAEA;IACAA,mBAAA;MACA,IAAAC,OAAA;MACA,IAAAC,YAAA;MAEA,KAAAC,aAAA,CAAAC,OAAA,CAAAC,MAAA;QACA,IAAAA,MAAA,CAAAC,KAAA,KAAAJ,YAAA;UACAA,YAAA,GAAAG,MAAA,CAAAC,KAAA;UACAL,OAAA,OAAAC,YAAA;QACA;QACAD,OAAA,OAAAI,MAAA,CAAAZ,IAAA,IAAAY,MAAA,CAAAE,IAAA,CAAAC,IAAA;MACA;MAEA,OAAAP,OAAA,CAAAQ,IAAA;IACA;IAEA;IACAV,mBAAA;MACA,IAAAE,OAAA;MACA,IAAAC,YAAA;MAEA,KAAAC,aAAA,CAAAC,OAAA,CAAAC,MAAA;QACA;QACA,IAAAA,MAAA,CAAAC,KAAA,KAAAJ,YAAA;UACAA,YAAA,GAAAG,MAAA,CAAAC,KAAA;QACA;;QAEA;QACAD,MAAA,CAAAE,IAAA,CAAAH,OAAA,CAAAM,GAAA;UACAT,OAAA,+BAAAI,MAAA,CAAAC,KAAA,KAAAD,MAAA,CAAAZ,IAAA;UACAQ,OAAA,OAAAS,GAAA;QACA;MACA;MAEA,OAAAT,OAAA,CAAAQ,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}