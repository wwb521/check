{"ast":null,"code":"export default {\n  name: 'PageHeader',\n  data() {\n    return {\n      localIp: '',\n      metroIp: '',\n      isp: '',\n      ipv6Support: false,\n      ipv6Loading: false\n    };\n  },\n  mounted() {\n    this.getNetworkInfo();\n  },\n  methods: {\n    async getNetworkInfo() {\n      if (this.ipv6Loading) return; // 如果正在检测中，则不重复检测\n\n      this.ipv6Loading = true;\n      try {\n        const serverIp = localStorage.getItem('serverIp') || '192.168.0.108';\n        const response = await fetch(`http://${serverIp}:8080/api/network-info`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) throw new Error('请求失败');\n        const data = await response.json();\n        if (data.success) {\n          this.localIp = data.localIp;\n          this.metroIp = data.metroIp;\n          this.isp = data.isp;\n          this.ipv6Support = Boolean(data.ipv6Support);\n          console.log('IPv6 support status:', data.ipv6Support);\n        }\n      } catch (error) {\n        console.error('获取网络信息失败:', error);\n        this.$message.error('检测失败，请重试');\n      } finally {\n        this.ipv6Loading = false;\n      }\n    },\n    copyIp() {\n      if (this.localIp) {\n        const textarea = document.createElement('textarea');\n        textarea.value = this.localIp;\n        document.body.appendChild(textarea);\n        textarea.select();\n        try {\n          document.execCommand('copy');\n          this.$message.success('IP地址已复制');\n        } catch (err) {\n          this.$message.error('复制失败');\n        } finally {\n          document.body.removeChild(textarea);\n        }\n      }\n    },\n    getBaseUrl() {\n      // 在生产环境中使用相对路径\n      if (process.env.NODE_ENV === 'production') {\n        return ''; // 返回空字符串，这样会使用相对路径\n      }\n      // 在开发环境中保持原有逻辑\n      const serverIp = localStorage.getItem('serverIp');\n      if (serverIp) {\n        return `http://${serverIp}:8080`;\n      }\n      return 'http://localhost:8080';\n    }\n  }\n};","map":{"version":3,"names":["name","data","localIp","metroIp","isp","ipv6Support","ipv6Loading","mounted","getNetworkInfo","methods","serverIp","localStorage","getItem","response","fetch","method","headers","ok","Error","json","success","Boolean","console","log","error","$message","copyIp","textarea","document","createElement","value","body","appendChild","select","execCommand","err","removeChild","getBaseUrl","process","env","NODE_ENV"],"sources":["src/components/Header.vue"],"sourcesContent":["<template>\n  <div class=\"header\">\n    <div class=\"logo\">\n      <i class=\"el-icon-video-camera\"></i>\n      <span class=\"title\">媒体流检测工具</span>\n    </div>\n    <div class=\"header-right\">\n      <div class=\"network-info\" v-if=\"localIp\">\n        <div class=\"info-tags\">\n          <el-tooltip effect=\"dark\" placement=\"bottom\">\n            <div slot=\"content\">\n              <div>本机IP：{{ localIp }}</div>\n              <div v-if=\"metroIp\">公网IP：{{ metroIp }}</div>\n              <div>点击复制本机IP</div>\n            </div>\n            <el-tag \n              type=\"info\" \n              @click=\"copyIp\"\n              style=\"cursor: pointer\">\n              {{ localIp }}\n            </el-tag>\n          </el-tooltip>\n          <el-tooltip effect=\"dark\" placement=\"bottom\" :content=\"isp\">\n            <el-tag \n              type=\"warning\"\n              style=\"margin-left: 8px\">\n              {{ isp }}\n            </el-tag>\n          </el-tooltip>\n        </div>\n      </div>\n      <el-tooltip :content=\"ipv6Loading ? '正在检测IPV6支持状态...' : '点击重新检测IPV6支持状态'\" placement=\"bottom\">\n        <div class=\"ipv6-status\" \n          :class=\"{ 'is-supported': ipv6Support, 'is-loading': ipv6Loading }\"\n          @click=\"getNetworkInfo\">\n          <i v-if=\"!ipv6Loading\" :class=\"ipv6Support ? 'el-icon-check' : 'el-icon-close'\"></i>\n          <i v-else class=\"el-icon-loading\"></i>\n          IPV6{{ ipv6Loading ? '检测中' : (ipv6Support ? '支持' : '不支持') }}\n        </div>\n      </el-tooltip>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'PageHeader',\n  data() {\n    return {\n      localIp: '',\n      metroIp: '',\n      isp: '',\n      ipv6Support: false,\n      ipv6Loading: false\n    }\n  },\n  mounted() {\n    this.getNetworkInfo()\n  },\n  methods: {\n    async getNetworkInfo() {\n      if (this.ipv6Loading) return // 如果正在检测中，则不重复检测\n      \n      this.ipv6Loading = true\n      try {\n        const serverIp = localStorage.getItem('serverIp') || '192.168.0.108'\n        const response = await fetch(`http://${serverIp}:8080/api/network-info`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n        \n        if (!response.ok) throw new Error('请求失败')\n        \n        const data = await response.json()\n        if (data.success) {\n          this.localIp = data.localIp\n          this.metroIp = data.metroIp\n          this.isp = data.isp\n          this.ipv6Support = Boolean(data.ipv6Support)\n          console.log('IPv6 support status:', data.ipv6Support)\n        }\n      } catch (error) {\n        console.error('获取网络信息失败:', error)\n        this.$message.error('检测失败，请重试')\n      } finally {\n        this.ipv6Loading = false\n      }\n    },\n    copyIp() {\n      if (this.localIp) {\n        const textarea = document.createElement('textarea')\n        textarea.value = this.localIp\n        document.body.appendChild(textarea)\n        textarea.select()\n        \n        try {\n          document.execCommand('copy')\n          this.$message.success('IP地址已复制')\n        } catch (err) {\n          this.$message.error('复制失败')\n        } finally {\n          document.body.removeChild(textarea)\n        }\n      }\n    },\n    getBaseUrl() {\n      // 在生产环境中使用相对路径\n      if (process.env.NODE_ENV === 'production') {\n        return ''  // 返回空字符串，这样会使用相对路径\n      }\n      // 在开发环境中保持原有逻辑\n      const serverIp = localStorage.getItem('serverIp')\n      if (serverIp) {\n        return `http://${serverIp}:8080`\n      }\n      return 'http://localhost:8080'\n    }\n  }\n}\n</script>\n\n<style scoped>\n.header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 24px;\n  height: 52px;\n  background-color: #001529;\n  box-shadow: 0 1px 4px rgba(0,21,41,.08);\n}\n\n.logo {\n  display: flex;\n  align-items: center;\n}\n\n.logo i {\n  font-size: 24px;\n  color: #fff;\n}\n\n.title {\n  margin-left: 14px;\n  font-size: 18px;\n  font-weight: 500;\n  color: white;\n  letter-spacing: 0.5px;\n}\n\n.header-right {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.network-info .info-tags {\n  display: flex;\n  align-items: center;\n}\n\n.network-info .el-tag {\n  height: 28px;\n  line-height: 28px;\n  padding: 0 12px;\n  border-radius: 2px;\n  font-size: 13px;\n}\n\n.network-info .el-tag:first-child {\n  background-color: #1890ff;\n  border-color: #1890ff;\n  color: white;\n}\n\n.network-info .el-tag:first-child:hover {\n  background-color: #40a9ff;\n  border-color: #40a9ff;\n}\n\n.ipv6-status {\n  display: inline-flex;\n  align-items: center;\n  padding: 0 10px;\n  height: 28px;\n  line-height: 28px;\n  background: #f56c6c;\n  color: #fff;\n  border-radius: 2px;\n  font-size: 13px;\n  transition: all 0.3s ease;\n  cursor: pointer;\n}\n\n.ipv6-status.is-supported {\n  background: #67c23a;\n}\n\n.ipv6-status.is-loading {\n  background: #909399;\n}\n\n.ipv6-status i {\n  margin-right: 4px;\n  font-size: 13px;\n}\n\n@keyframes rotating {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.el-icon-loading {\n  animation: rotating 2s linear infinite;\n}\n</style> "],"mappings":"AA6CA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,OAAA;MACAC,GAAA;MACAC,WAAA;MACAC,WAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,cAAA;EACA;EACAC,OAAA;IACA,MAAAD,eAAA;MACA,SAAAF,WAAA;;MAEA,KAAAA,WAAA;MACA;QACA,MAAAI,QAAA,GAAAC,YAAA,CAAAC,OAAA;QACA,MAAAC,QAAA,SAAAC,KAAA,WAAAJ,QAAA;UACAK,MAAA;UACAC,OAAA;YACA;UACA;QACA;QAEA,KAAAH,QAAA,CAAAI,EAAA,YAAAC,KAAA;QAEA,MAAAjB,IAAA,SAAAY,QAAA,CAAAM,IAAA;QACA,IAAAlB,IAAA,CAAAmB,OAAA;UACA,KAAAlB,OAAA,GAAAD,IAAA,CAAAC,OAAA;UACA,KAAAC,OAAA,GAAAF,IAAA,CAAAE,OAAA;UACA,KAAAC,GAAA,GAAAH,IAAA,CAAAG,GAAA;UACA,KAAAC,WAAA,GAAAgB,OAAA,CAAApB,IAAA,CAAAI,WAAA;UACAiB,OAAA,CAAAC,GAAA,yBAAAtB,IAAA,CAAAI,WAAA;QACA;MACA,SAAAmB,KAAA;QACAF,OAAA,CAAAE,KAAA,cAAAA,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;MACA;QACA,KAAAlB,WAAA;MACA;IACA;IACAoB,OAAA;MACA,SAAAxB,OAAA;QACA,MAAAyB,QAAA,GAAAC,QAAA,CAAAC,aAAA;QACAF,QAAA,CAAAG,KAAA,QAAA5B,OAAA;QACA0B,QAAA,CAAAG,IAAA,CAAAC,WAAA,CAAAL,QAAA;QACAA,QAAA,CAAAM,MAAA;QAEA;UACAL,QAAA,CAAAM,WAAA;UACA,KAAAT,QAAA,CAAAL,OAAA;QACA,SAAAe,GAAA;UACA,KAAAV,QAAA,CAAAD,KAAA;QACA;UACAI,QAAA,CAAAG,IAAA,CAAAK,WAAA,CAAAT,QAAA;QACA;MACA;IACA;IACAU,WAAA;MACA;MACA,IAAAC,OAAA,CAAAC,GAAA,CAAAC,QAAA;QACA;MACA;MACA;MACA,MAAA9B,QAAA,GAAAC,YAAA,CAAAC,OAAA;MACA,IAAAF,QAAA;QACA,iBAAAA,QAAA;MACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}