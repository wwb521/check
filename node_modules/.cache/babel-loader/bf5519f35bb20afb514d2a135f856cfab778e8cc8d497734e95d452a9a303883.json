{"ast":null,"code":"export default {\n  name: 'PageHeader',\n  data() {\n    return {\n      localIp: '',\n      metroIp: '',\n      isp: '',\n      ipv6Support: false,\n      ipv6Loading: true,\n      checkTimer: null\n    };\n  },\n  mounted() {\n    this.getNetworkInfo();\n    this.startNetworkCheck();\n  },\n  beforeDestroy() {\n    if (this.checkTimer) {\n      clearTimeout(this.checkTimer);\n    }\n  },\n  methods: {\n    async getNetworkInfo() {\n      this.ipv6Loading = true;\n      try {\n        const response = await fetch(`${this.getBaseUrl()}/api/network-info`);\n        if (response.ok) {\n          const data = await response.json();\n          if (data.success) {\n            this.localIp = data.localIp;\n            this.metroIp = data.metroIp;\n            this.isp = data.isp;\n            this.ipv6Support = Boolean(data.ipv6Support);\n            console.log('IPv6 support status:', data.ipv6Support);\n          }\n        }\n      } catch (error) {\n        console.error('获取网络信息失败:', error);\n      } finally {\n        this.ipv6Loading = false;\n      }\n    },\n    startNetworkCheck() {\n      // 每5分钟检查一次网络状态\n      this.checkTimer = setInterval(() => {\n        this.getNetworkInfo();\n      }, 5 * 60 * 1000);\n    },\n    copyIp() {\n      if (this.localIp) {\n        const textarea = document.createElement('textarea');\n        textarea.value = this.localIp;\n        document.body.appendChild(textarea);\n        textarea.select();\n        try {\n          document.execCommand('copy');\n          this.$message.success('IP地址已复制');\n        } catch (err) {\n          this.$message.error('复制失败');\n        } finally {\n          document.body.removeChild(textarea);\n        }\n      }\n    },\n    getBaseUrl() {\n      // 在生产环境中使用相对路径\n      if (process.env.NODE_ENV === 'production') {\n        return ''; // 返回空字符串，这样会使用相对路径\n      }\n      // 在开发环境中保持原有逻辑\n      const useRealIp = localStorage.getItem('useRealIp') === 'true';\n      const realIp = localStorage.getItem('realIp');\n      return useRealIp && realIp ? `http://${realIp}:8080` : 'http://localhost:8080';\n    }\n  }\n};","map":{"version":3,"names":["name","data","localIp","metroIp","isp","ipv6Support","ipv6Loading","checkTimer","mounted","getNetworkInfo","startNetworkCheck","beforeDestroy","clearTimeout","methods","response","fetch","getBaseUrl","ok","json","success","Boolean","console","log","error","setInterval","copyIp","textarea","document","createElement","value","body","appendChild","select","execCommand","$message","err","removeChild","process","env","NODE_ENV","useRealIp","localStorage","getItem","realIp"],"sources":["src/components/Header.vue"],"sourcesContent":["<template>\n  <div class=\"header\">\n    <div class=\"logo\">\n      <i class=\"el-icon-video-camera\"></i>\n      <span class=\"title\">媒体流检测工具</span>\n    </div>\n    <div class=\"header-right\">\n      <div class=\"network-info\" v-if=\"localIp\">\n        <div class=\"info-tags\">\n          <el-tooltip effect=\"dark\" placement=\"bottom\">\n            <div slot=\"content\">\n              <div>本机IP：{{ localIp }}</div>\n              <div v-if=\"metroIp\">公网IP：{{ metroIp }}</div>\n              <div>点击复制本机IP</div>\n            </div>\n            <el-tag \n              type=\"info\" \n              @click=\"copyIp\"\n              style=\"cursor: pointer\">\n              {{ localIp }}\n            </el-tag>\n          </el-tooltip>\n          <el-tooltip effect=\"dark\" placement=\"bottom\" :content=\"isp\">\n            <el-tag \n              type=\"warning\"\n              style=\"margin-left: 8px\">\n              {{ isp }}\n            </el-tag>\n          </el-tooltip>\n        </div>\n      </div>\n      <el-tooltip :content=\"ipv6Loading ? '正在检测IPV6支持状态...' : '当前网络IPV6支持状态'\" placement=\"bottom\">\n        <div class=\"ipv6-status\" :class=\"{ 'is-supported': ipv6Support, 'is-loading': ipv6Loading }\">\n          <i v-if=\"!ipv6Loading\" :class=\"ipv6Support ? 'el-icon-check' : 'el-icon-close'\"></i>\n          <i v-else class=\"el-icon-loading\"></i>\n          IPV6{{ ipv6Loading ? '检测中' : (ipv6Support ? '支持' : '不支持') }}\n        </div>\n      </el-tooltip>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'PageHeader',\n  data() {\n    return {\n      localIp: '',\n      metroIp: '',\n      isp: '',\n      ipv6Support: false,\n      ipv6Loading: true,\n      checkTimer: null\n    }\n  },\n  mounted() {\n    this.getNetworkInfo()\n    this.startNetworkCheck()\n  },\n  beforeDestroy() {\n    if (this.checkTimer) {\n      clearTimeout(this.checkTimer)\n    }\n  },\n  methods: {\n    async getNetworkInfo() {\n      this.ipv6Loading = true\n      try {\n        const response = await fetch(`${this.getBaseUrl()}/api/network-info`)\n        if (response.ok) {\n          const data = await response.json()\n          if (data.success) {\n            this.localIp = data.localIp\n            this.metroIp = data.metroIp\n            this.isp = data.isp\n            this.ipv6Support = Boolean(data.ipv6Support)\n            console.log('IPv6 support status:', data.ipv6Support)\n          }\n        }\n      } catch (error) {\n        console.error('获取网络信息失败:', error)\n      } finally {\n        this.ipv6Loading = false\n      }\n    },\n    startNetworkCheck() {\n      // 每5分钟检查一次网络状态\n      this.checkTimer = setInterval(() => {\n        this.getNetworkInfo()\n      }, 5 * 60 * 1000)\n    },\n    copyIp() {\n      if (this.localIp) {\n        const textarea = document.createElement('textarea')\n        textarea.value = this.localIp\n        document.body.appendChild(textarea)\n        textarea.select()\n        \n        try {\n          document.execCommand('copy')\n          this.$message.success('IP地址已复制')\n        } catch (err) {\n          this.$message.error('复制失败')\n        } finally {\n          document.body.removeChild(textarea)\n        }\n      }\n    },\n    getBaseUrl() {\n      // 在生产环境中使用相对路径\n      if (process.env.NODE_ENV === 'production') {\n        return ''  // 返回空字符串，这样会使用相对路径\n      }\n      // 在开发环境中保持原有逻辑\n      const useRealIp = localStorage.getItem('useRealIp') === 'true'\n      const realIp = localStorage.getItem('realIp')\n      return useRealIp && realIp ? `http://${realIp}:8080` : 'http://localhost:8080'\n    }\n  }\n}\n</script>\n\n<style scoped>\n.header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 24px;\n  height: 52px;\n  background-color: #001529;\n  box-shadow: 0 1px 4px rgba(0,21,41,.08);\n}\n\n.logo {\n  display: flex;\n  align-items: center;\n}\n\n.logo i {\n  font-size: 24px;\n  color: #fff;\n}\n\n.title {\n  margin-left: 14px;\n  font-size: 18px;\n  font-weight: 500;\n  color: white;\n  letter-spacing: 0.5px;\n}\n\n.header-right {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.network-info .info-tags {\n  display: flex;\n  align-items: center;\n}\n\n.network-info .el-tag {\n  height: 28px;\n  line-height: 28px;\n  padding: 0 12px;\n  border-radius: 2px;\n  font-size: 13px;\n}\n\n.network-info .el-tag:first-child {\n  background-color: #1890ff;\n  border-color: #1890ff;\n  color: white;\n}\n\n.network-info .el-tag:first-child:hover {\n  background-color: #40a9ff;\n  border-color: #40a9ff;\n}\n\n.ipv6-status {\n  display: inline-flex;\n  align-items: center;\n  padding: 0 10px;\n  height: 28px;\n  line-height: 28px;\n  background: #f56c6c;\n  color: #fff;\n  border-radius: 2px;\n  font-size: 13px;\n  transition: all 0.3s ease;\n}\n\n.ipv6-status.is-supported {\n  background: #67c23a;\n}\n\n.ipv6-status.is-loading {\n  background: #909399;\n}\n\n.ipv6-status i {\n  margin-right: 4px;\n  font-size: 13px;\n}\n\n@keyframes rotating {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.el-icon-loading {\n  animation: rotating 2s linear infinite;\n}\n</style> "],"mappings":"AA2CA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,OAAA;MACAC,GAAA;MACAC,WAAA;MACAC,WAAA;MACAC,UAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,cAAA;IACA,KAAAC,iBAAA;EACA;EACAC,cAAA;IACA,SAAAJ,UAAA;MACAK,YAAA,MAAAL,UAAA;IACA;EACA;EACAM,OAAA;IACA,MAAAJ,eAAA;MACA,KAAAH,WAAA;MACA;QACA,MAAAQ,QAAA,SAAAC,KAAA,SAAAC,UAAA;QACA,IAAAF,QAAA,CAAAG,EAAA;UACA,MAAAhB,IAAA,SAAAa,QAAA,CAAAI,IAAA;UACA,IAAAjB,IAAA,CAAAkB,OAAA;YACA,KAAAjB,OAAA,GAAAD,IAAA,CAAAC,OAAA;YACA,KAAAC,OAAA,GAAAF,IAAA,CAAAE,OAAA;YACA,KAAAC,GAAA,GAAAH,IAAA,CAAAG,GAAA;YACA,KAAAC,WAAA,GAAAe,OAAA,CAAAnB,IAAA,CAAAI,WAAA;YACAgB,OAAA,CAAAC,GAAA,yBAAArB,IAAA,CAAAI,WAAA;UACA;QACA;MACA,SAAAkB,KAAA;QACAF,OAAA,CAAAE,KAAA,cAAAA,KAAA;MACA;QACA,KAAAjB,WAAA;MACA;IACA;IACAI,kBAAA;MACA;MACA,KAAAH,UAAA,GAAAiB,WAAA;QACA,KAAAf,cAAA;MACA;IACA;IACAgB,OAAA;MACA,SAAAvB,OAAA;QACA,MAAAwB,QAAA,GAAAC,QAAA,CAAAC,aAAA;QACAF,QAAA,CAAAG,KAAA,QAAA3B,OAAA;QACAyB,QAAA,CAAAG,IAAA,CAAAC,WAAA,CAAAL,QAAA;QACAA,QAAA,CAAAM,MAAA;QAEA;UACAL,QAAA,CAAAM,WAAA;UACA,KAAAC,QAAA,CAAAf,OAAA;QACA,SAAAgB,GAAA;UACA,KAAAD,QAAA,CAAAX,KAAA;QACA;UACAI,QAAA,CAAAG,IAAA,CAAAM,WAAA,CAAAV,QAAA;QACA;MACA;IACA;IACAV,WAAA;MACA;MACA,IAAAqB,OAAA,CAAAC,GAAA,CAAAC,QAAA;QACA;MACA;MACA;MACA,MAAAC,SAAA,GAAAC,YAAA,CAAAC,OAAA;MACA,MAAAC,MAAA,GAAAF,YAAA,CAAAC,OAAA;MACA,OAAAF,SAAA,IAAAG,MAAA,aAAAA,MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}