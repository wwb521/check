{"ast":null,"code":"export default {\n  name: 'PageHeader',\n  data() {\n    return {\n      localIp: '',\n      showSearch: false,\n      searchForm: {\n        keyword: '',\n        type: 'all'\n      },\n      searchResults: [],\n      hasSearched: false\n    };\n  },\n  mounted() {\n    this.getLocalIp();\n  },\n  methods: {\n    async getLocalIp() {\n      try {\n        // 获取本机IP\n        const response = await fetch('http://localhost:8080/api/local-ip');\n        if (response.ok) {\n          this.localIp = await response.text();\n        }\n      } catch (error) {\n        console.error('获取IP失败:', error);\n      }\n    },\n    copyIp() {\n      if (this.localIp) {\n        const textarea = document.createElement('textarea');\n        textarea.value = this.localIp;\n        document.body.appendChild(textarea);\n        textarea.select();\n        try {\n          document.execCommand('copy');\n          this.$message.success('IP地址已复制');\n        } catch (err) {\n          this.$message.error('复制失败');\n        } finally {\n          document.body.removeChild(textarea);\n        }\n      }\n    },\n    handleSearch() {\n      if (!this.searchForm.keyword.trim()) {\n        this.searchResults = [];\n        this.hasSearched = false;\n        return;\n      }\n      const keyword = this.searchForm.keyword.toLowerCase();\n      const streamList = this.$root.$refs.home.$refs.streamCheck.streamList;\n      this.searchResults = streamList.filter(stream => {\n        if (this.searchForm.type === 'name' || this.searchForm.type === 'all') {\n          if (stream.name.toLowerCase().includes(keyword)) return true;\n        }\n        if (this.searchForm.type === 'group' || this.searchForm.type === 'all') {\n          if (stream.group.toLowerCase().includes(keyword)) return true;\n        }\n        if (this.searchForm.type === 'url' || this.searchForm.type === 'all') {\n          if (stream.url.toLowerCase().includes(keyword)) return true;\n        }\n        return false;\n      });\n      this.hasSearched = true;\n    },\n    handleClear() {\n      this.searchResults = [];\n      this.hasSearched = false;\n    }\n  }\n};","map":{"version":3,"names":["name","data","localIp","showSearch","searchForm","keyword","type","searchResults","hasSearched","mounted","getLocalIp","methods","response","fetch","ok","text","error","console","copyIp","textarea","document","createElement","value","body","appendChild","select","execCommand","$message","success","err","removeChild","handleSearch","trim","toLowerCase","streamList","$root","$refs","home","streamCheck","filter","stream","includes","group","url","handleClear"],"sources":["src/components/Header.vue"],"sourcesContent":["<template>\n  <div class=\"header\">\n    <div class=\"logo\">\n      <i class=\"el-icon-video-camera\" style=\"font-size: 24px;\"></i>\n      <span class=\"title\">直播源检测工具</span>\n    </div>\n    <div class=\"search-container\">\n      <el-popover\n        placement=\"bottom\"\n        width=\"400\"\n        trigger=\"click\"\n        v-model=\"showSearch\">\n        <div class=\"search-panel\">\n          <el-form :model=\"searchForm\" size=\"small\" @submit.native.prevent>\n            <el-form-item>\n              <el-input\n                v-model=\"searchForm.keyword\"\n                placeholder=\"输入关键词搜索\"\n                clearable\n                @keyup.enter.native=\"handleSearch\"\n                @clear=\"handleClear\">\n                <el-select\n                  slot=\"prepend\"\n                  v-model=\"searchForm.type\"\n                  style=\"width: 110px\">\n                  <el-option label=\"全部\" value=\"all\"></el-option>\n                  <el-option label=\"名称\" value=\"name\"></el-option>\n                  <el-option label=\"分组\" value=\"group\"></el-option>\n                  <el-option label=\"地址\" value=\"url\"></el-option>\n                </el-select>\n                <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"handleSearch\"></el-button>\n              </el-input>\n            </el-form-item>\n          </el-form>\n          <div v-if=\"searchResults.length > 0\" class=\"search-results\">\n            <div v-for=\"(item, index) in searchResults\" :key=\"index\" class=\"search-item\">\n              <div class=\"search-item-name\">{{ item.name }}</div>\n              <div class=\"search-item-group\">{{ item.group }}</div>\n              <div class=\"search-item-url\">{{ item.url }}</div>\n            </div>\n          </div>\n          <div v-else-if=\"hasSearched\" class=\"no-results\">\n            未找到匹配的直播源\n          </div>\n        </div>\n      </el-popover>\n      <el-button \n        type=\"text\" \n        class=\"search-btn\"\n        v-popover:popover>\n        <i class=\"el-icon-search\"></i>\n      </el-button>\n    </div>\n    <div class=\"ip-info\" v-if=\"localIp\">\n      <el-tooltip effect=\"dark\" placement=\"bottom\">\n        <div slot=\"content\">\n          <div>本机IP地址</div>\n          <div>点击复制</div>\n        </div>\n        <el-tag \n          type=\"info\" \n          @click=\"copyIp\"\n          style=\"cursor: pointer\">\n          {{ localIp }}\n        </el-tag>\n      </el-tooltip>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'PageHeader',\n  data() {\n    return {\n      localIp: '',\n      showSearch: false,\n      searchForm: {\n        keyword: '',\n        type: 'all'\n      },\n      searchResults: [],\n      hasSearched: false\n    }\n  },\n  mounted() {\n    this.getLocalIp()\n  },\n  methods: {\n    async getLocalIp() {\n      try {\n        // 获取本机IP\n        const response = await fetch('http://localhost:8080/api/local-ip')\n        if (response.ok) {\n          this.localIp = await response.text()\n        }\n      } catch (error) {\n        console.error('获取IP失败:', error)\n      }\n    },\n    copyIp() {\n      if (this.localIp) {\n        const textarea = document.createElement('textarea')\n        textarea.value = this.localIp\n        document.body.appendChild(textarea)\n        textarea.select()\n        \n        try {\n          document.execCommand('copy')\n          this.$message.success('IP地址已复制')\n        } catch (err) {\n          this.$message.error('复制失败')\n        } finally {\n          document.body.removeChild(textarea)\n        }\n      }\n    },\n    handleSearch() {\n      if (!this.searchForm.keyword.trim()) {\n        this.searchResults = []\n        this.hasSearched = false\n        return\n      }\n\n      const keyword = this.searchForm.keyword.toLowerCase()\n      const streamList = this.$root.$refs.home.$refs.streamCheck.streamList\n\n      this.searchResults = streamList.filter(stream => {\n        if (this.searchForm.type === 'name' || this.searchForm.type === 'all') {\n          if (stream.name.toLowerCase().includes(keyword)) return true\n        }\n        if (this.searchForm.type === 'group' || this.searchForm.type === 'all') {\n          if (stream.group.toLowerCase().includes(keyword)) return true\n        }\n        if (this.searchForm.type === 'url' || this.searchForm.type === 'all') {\n          if (stream.url.toLowerCase().includes(keyword)) return true\n        }\n        return false\n      })\n\n      this.hasSearched = true\n    },\n    handleClear() {\n      this.searchResults = []\n      this.hasSearched = false\n    }\n  }\n}\n</script>\n\n<style scoped>\n.header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 24px;\n  background-color: #001529;\n  box-shadow: 0 1px 4px rgba(0,21,41,.08);\n}\n\n.logo {\n  display: flex;\n  align-items: center;\n}\n\n.title {\n  margin-left: 12px;\n  font-size: 18px;\n  font-weight: 400;\n  color: white;\n}\n\n.ip-info {\n  margin-left: auto;\n}\n\n.ip-info .el-tag {\n  background-color: #1890ff;\n  border-color: #1890ff;\n  color: white;\n  font-size: 14px;\n  height: 32px;\n  line-height: 30px;\n  padding: 0 15px;\n  border-radius: 2px;\n}\n\n.ip-info .el-tag:hover {\n  background-color: #40a9ff;\n  border-color: #40a9ff;\n  opacity: 1;\n}\n\n.search-container {\n  margin-left: auto;\n  margin-right: 20px;\n}\n\n.search-btn {\n  color: rgba(255, 255, 255, 0.65);\n  font-size: 18px;\n}\n\n.search-btn:hover {\n  color: #fff;\n}\n\n.search-panel {\n  padding: 10px;\n}\n\n.search-results {\n  max-height: 400px;\n  overflow-y: auto;\n}\n\n.search-item {\n  padding: 10px;\n  border-bottom: 1px solid #eee;\n  cursor: pointer;\n}\n\n.search-item:hover {\n  background-color: #f5f7fa;\n}\n\n.search-item-name {\n  font-weight: bold;\n  margin-bottom: 5px;\n}\n\n.search-item-group {\n  color: #909399;\n  font-size: 12px;\n  margin-bottom: 3px;\n}\n\n.search-item-url {\n  color: #606266;\n  font-size: 12px;\n  word-break: break-all;\n}\n\n.no-results {\n  padding: 20px;\n  text-align: center;\n  color: #909399;\n}\n</style> "],"mappings":"AAuEA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,UAAA;MACAC,UAAA;QACAC,OAAA;QACAC,IAAA;MACA;MACAC,aAAA;MACAC,WAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,UAAA;EACA;EACAC,OAAA;IACA,MAAAD,WAAA;MACA;QACA;QACA,MAAAE,QAAA,SAAAC,KAAA;QACA,IAAAD,QAAA,CAAAE,EAAA;UACA,KAAAZ,OAAA,SAAAU,QAAA,CAAAG,IAAA;QACA;MACA,SAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,YAAAA,KAAA;MACA;IACA;IACAE,OAAA;MACA,SAAAhB,OAAA;QACA,MAAAiB,QAAA,GAAAC,QAAA,CAAAC,aAAA;QACAF,QAAA,CAAAG,KAAA,QAAApB,OAAA;QACAkB,QAAA,CAAAG,IAAA,CAAAC,WAAA,CAAAL,QAAA;QACAA,QAAA,CAAAM,MAAA;QAEA;UACAL,QAAA,CAAAM,WAAA;UACA,KAAAC,QAAA,CAAAC,OAAA;QACA,SAAAC,GAAA;UACA,KAAAF,QAAA,CAAAX,KAAA;QACA;UACAI,QAAA,CAAAG,IAAA,CAAAO,WAAA,CAAAX,QAAA;QACA;MACA;IACA;IACAY,aAAA;MACA,UAAA3B,UAAA,CAAAC,OAAA,CAAA2B,IAAA;QACA,KAAAzB,aAAA;QACA,KAAAC,WAAA;QACA;MACA;MAEA,MAAAH,OAAA,QAAAD,UAAA,CAAAC,OAAA,CAAA4B,WAAA;MACA,MAAAC,UAAA,QAAAC,KAAA,CAAAC,KAAA,CAAAC,IAAA,CAAAD,KAAA,CAAAE,WAAA,CAAAJ,UAAA;MAEA,KAAA3B,aAAA,GAAA2B,UAAA,CAAAK,MAAA,CAAAC,MAAA;QACA,SAAApC,UAAA,CAAAE,IAAA,oBAAAF,UAAA,CAAAE,IAAA;UACA,IAAAkC,MAAA,CAAAxC,IAAA,CAAAiC,WAAA,GAAAQ,QAAA,CAAApC,OAAA;QACA;QACA,SAAAD,UAAA,CAAAE,IAAA,qBAAAF,UAAA,CAAAE,IAAA;UACA,IAAAkC,MAAA,CAAAE,KAAA,CAAAT,WAAA,GAAAQ,QAAA,CAAApC,OAAA;QACA;QACA,SAAAD,UAAA,CAAAE,IAAA,mBAAAF,UAAA,CAAAE,IAAA;UACA,IAAAkC,MAAA,CAAAG,GAAA,CAAAV,WAAA,GAAAQ,QAAA,CAAApC,OAAA;QACA;QACA;MACA;MAEA,KAAAG,WAAA;IACA;IACAoC,YAAA;MACA,KAAArC,aAAA;MACA,KAAAC,WAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}