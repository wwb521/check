{"ast":null,"code":"export default {\n  name: 'SettingsPage',\n  data() {\n    return {\n      settings: {\n        ffprobePath: localStorage.getItem('ffprobePath') || '',\n        autoRemoveInvalid: localStorage.getItem('autoRemoveInvalid') === 'true',\n        autoRemoveLowRes: localStorage.getItem('autoRemoveLowRes') === 'true',\n        autoRemoveSlowResponse: localStorage.getItem('autoRemoveSlowResponse') === 'true',\n        concurrentChecks: parseInt(localStorage.getItem('concurrentChecks')) || 3,\n        strictMode: localStorage.getItem('strictMode') === 'true',\n        extremeMode: localStorage.getItem('extremeMode') === 'true',\n        useRealIp: localStorage.getItem('useRealIp') === 'true'\n      }\n    };\n  },\n  methods: {\n    async testFfprobe() {\n      if (!this.settings.ffprobePath) {\n        this.$message.warning('请先输入FFprobe路径');\n        return;\n      }\n      this.$message.info('正在测试FFprobe...');\n      try {\n        const response = await fetch(`${this.getBaseUrl()}/api/test-ffprobe`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            path: this.settings.ffprobePath\n          })\n        });\n        if (!response.ok) throw new Error('请求失败');\n        const result = await response.json();\n        if (result.success) {\n          this.$message.success('FFprobe测试成功');\n        } else {\n          throw new Error(result.message);\n        }\n      } catch (error) {\n        this.$message.error('FFprobe测试失败: ' + error.message);\n      }\n    },\n    handleSettingChange() {\n      this.updateLocalStorage();\n      if ('useRealIp' in this.settings) {\n        const useRealIp = this.settings.useRealIp;\n        const realIp = localStorage.getItem('realIp');\n        if (useRealIp && realIp) {\n          const newUrl = window.location.href.replace('localhost', realIp);\n          window.history.replaceState(null, '', newUrl);\n        } else {\n          const currentUrl = window.location.href;\n          const newUrl = currentUrl.replace(/\\d+\\.\\d+\\.\\d+\\.\\d+/, 'localhost');\n          window.history.replaceState(null, '', newUrl);\n        }\n      }\n    },\n    saveSettings() {\n      this.$refs.settingsForm.validate(valid => {\n        if (valid) {\n          this.updateLocalStorage();\n          this.$message.success('设置保存成功');\n        }\n      });\n    },\n    updateLocalStorage() {\n      localStorage.setItem('ffprobePath', this.settings.ffprobePath);\n      localStorage.setItem('autoRemoveInvalid', this.settings.autoRemoveInvalid);\n      localStorage.setItem('autoRemoveLowRes', this.settings.autoRemoveLowRes);\n      localStorage.setItem('autoRemoveSlowResponse', this.settings.autoRemoveSlowResponse);\n      localStorage.setItem('concurrentChecks', this.settings.concurrentChecks);\n      localStorage.setItem('strictMode', this.settings.strictMode);\n      localStorage.setItem('extremeMode', this.settings.extremeMode);\n      localStorage.setItem('useRealIp', this.settings.useRealIp);\n    },\n    getBaseUrl() {\n      const useRealIp = localStorage.getItem('useRealIp') === 'true';\n      const realIp = localStorage.getItem('realIp');\n      return useRealIp && realIp ? `http://${realIp}:8080` : 'http://localhost:8080';\n    }\n  }\n};","map":{"version":3,"names":["name","data","settings","ffprobePath","localStorage","getItem","autoRemoveInvalid","autoRemoveLowRes","autoRemoveSlowResponse","concurrentChecks","parseInt","strictMode","extremeMode","useRealIp","methods","testFfprobe","$message","warning","info","response","fetch","getBaseUrl","method","headers","body","JSON","stringify","path","ok","Error","result","json","success","message","error","handleSettingChange","updateLocalStorage","realIp","newUrl","window","location","href","replace","history","replaceState","currentUrl","saveSettings","$refs","settingsForm","validate","valid","setItem"],"sources":["src/views/Settings.vue"],"sourcesContent":["<template>\n  <div class=\"settings\">\n    <el-card class=\"settings-card\">\n      <div slot=\"header\">\n        <span>系统设置</span>\n      </div>\n      \n      <el-form :model=\"settings\" ref=\"settingsForm\" label-width=\"180px\">\n        <el-form-item \n          label=\"FFprobe路径\" \n          prop=\"ffprobePath\"\n          :rules=\"[\n            { required: true, message: '请输入FFprobe路径', trigger: 'blur' }\n          ]\">\n          <el-input \n            v-model=\"settings.ffprobePath\" \n            placeholder=\"请输入FFprobe可执行文件的完整路径\">\n            <el-button slot=\"append\" @click=\"testFfprobe\">测试</el-button>\n          </el-input>\n        </el-form-item>\n\n        <el-form-item label=\"自动清除异常源\">\n          <el-switch\n            v-model=\"settings.autoRemoveInvalid\"\n            @change=\"handleSettingChange\">\n          </el-switch>\n          <span class=\"setting-tip\">开启后将自动清除检测失败的直播源</span>\n        </el-form-item>\n\n        <el-form-item label=\"自动清除低分辨率\">\n          <el-switch\n            v-model=\"settings.autoRemoveLowRes\"\n            @change=\"handleSettingChange\">\n          </el-switch>\n          <span class=\"setting-tip\">开启后将自动清除分辨率低于{{ settings.extremeMode ? '1920x1080' : (settings.strictMode ? '1920x1080' : '1280x720') }}的直播源</span>\n        </el-form-item>\n\n        <el-form-item label=\"自动清除慢速源\">\n          <el-switch\n            v-model=\"settings.autoRemoveSlowResponse\"\n            @change=\"handleSettingChange\">\n          </el-switch>\n          <span class=\"setting-tip\">开启后将自动清除响应时间超过{{ settings.extremeMode ? '1500' : (settings.strictMode ? '2000' : '3000') }}ms的直播源</span>\n        </el-form-item>\n\n        <el-form-item label=\"严格模式\">\n          <el-switch\n            v-model=\"settings.strictMode\"\n            :disabled=\"settings.extremeMode\"\n            @change=\"handleSettingChange\">\n          </el-switch>\n          <span class=\"setting-tip\">\n            {{ settings.extremeMode ? '请先关闭极端模式' : '开启后将使用更严格的清除标准（1920x1080和2000ms）' }}\n          </span>\n        </el-form-item>\n\n        <el-form-item label=\"极端模式\">\n          <el-switch\n            v-model=\"settings.extremeMode\"\n            :disabled=\"settings.strictMode\"\n            @change=\"handleSettingChange\">\n          </el-switch>\n          <span class=\"setting-tip\">\n            {{ settings.strictMode ? '请先关闭严格模式' : '开启后将使用最严格的清除标准（1920x1080和1500ms）' }}\n          </span>\n        </el-form-item>\n\n        <el-form-item label=\"使用真实IP地址\">\n          <el-switch\n            v-model=\"settings.useRealIp\"\n            @change=\"handleSettingChange\">\n          </el-switch>\n          <span class=\"setting-tip\">开启后使用真实IP地址代替localhost</span>\n        </el-form-item>\n\n        <el-form-item \n          label=\"并发检测数量\" \n          prop=\"concurrentChecks\"\n          :rules=\"[\n            { required: true, message: '请设置并发检测数量', trigger: 'change' },\n            { type: 'number', min: 1, max: 100, message: '并发数必须在1到100之间', trigger: 'change' }\n          ]\">\n          <el-input-number \n            v-model=\"settings.concurrentChecks\"\n            :min=\"1\"\n            :max=\"100\"\n            :step=\"1\"\n            @change=\"handleSettingChange\">\n          </el-input-number>\n          <span class=\"setting-tip\">同时检测的直播源数量 (1-100个)</span>\n        </el-form-item>\n\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"saveSettings\">保存设置</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SettingsPage',\n  data() {\n    return {\n      settings: {\n        ffprobePath: localStorage.getItem('ffprobePath') || '',\n        autoRemoveInvalid: localStorage.getItem('autoRemoveInvalid') === 'true',\n        autoRemoveLowRes: localStorage.getItem('autoRemoveLowRes') === 'true',\n        autoRemoveSlowResponse: localStorage.getItem('autoRemoveSlowResponse') === 'true',\n        concurrentChecks: parseInt(localStorage.getItem('concurrentChecks')) || 3,\n        strictMode: localStorage.getItem('strictMode') === 'true',\n        extremeMode: localStorage.getItem('extremeMode') === 'true',\n        useRealIp: localStorage.getItem('useRealIp') === 'true'\n      }\n    }\n  },\n  methods: {\n    async testFfprobe() {\n      if (!this.settings.ffprobePath) {\n        this.$message.warning('请先输入FFprobe路径')\n        return\n      }\n\n      this.$message.info('正在测试FFprobe...')\n      try {\n        const response = await fetch(`${this.getBaseUrl()}/api/test-ffprobe`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ path: this.settings.ffprobePath })\n        })\n        \n        if (!response.ok) throw new Error('请求失败')\n        \n        const result = await response.json()\n        if (result.success) {\n          this.$message.success('FFprobe测试成功')\n        } else {\n          throw new Error(result.message)\n        }\n      } catch (error) {\n        this.$message.error('FFprobe测试失败: ' + error.message)\n      }\n    },\n    \n    handleSettingChange() {\n      this.updateLocalStorage()\n      if ('useRealIp' in this.settings) {\n        const useRealIp = this.settings.useRealIp\n        const realIp = localStorage.getItem('realIp')\n        if (useRealIp && realIp) {\n          const newUrl = window.location.href.replace('localhost', realIp)\n          window.history.replaceState(null, '', newUrl)\n        } else {\n          const currentUrl = window.location.href\n          const newUrl = currentUrl.replace(/\\d+\\.\\d+\\.\\d+\\.\\d+/, 'localhost')\n          window.history.replaceState(null, '', newUrl)\n        }\n      }\n    },\n    \n    saveSettings() {\n      this.$refs.settingsForm.validate(valid => {\n        if (valid) {\n          this.updateLocalStorage()\n          this.$message.success('设置保存成功')\n        }\n      })\n    },\n\n    updateLocalStorage() {\n      localStorage.setItem('ffprobePath', this.settings.ffprobePath)\n      localStorage.setItem('autoRemoveInvalid', this.settings.autoRemoveInvalid)\n      localStorage.setItem('autoRemoveLowRes', this.settings.autoRemoveLowRes)\n      localStorage.setItem('autoRemoveSlowResponse', this.settings.autoRemoveSlowResponse)\n      localStorage.setItem('concurrentChecks', this.settings.concurrentChecks)\n      localStorage.setItem('strictMode', this.settings.strictMode)\n      localStorage.setItem('extremeMode', this.settings.extremeMode)\n      localStorage.setItem('useRealIp', this.settings.useRealIp)\n    },\n\n    getBaseUrl() {\n      const useRealIp = localStorage.getItem('useRealIp') === 'true'\n      const realIp = localStorage.getItem('realIp')\n      return useRealIp && realIp ? `http://${realIp}:8080` : 'http://localhost:8080'\n    }\n  }\n}\n</script>\n\n<style scoped>\n.settings {\n  padding: 20px;\n}\n\n.settings-card {\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.setting-tip {\n  margin-left: 10px;\n  color: #909399;\n  font-size: 13px;\n}\n</style> "],"mappings":"AAqGA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;QACAC,WAAA,EAAAC,YAAA,CAAAC,OAAA;QACAC,iBAAA,EAAAF,YAAA,CAAAC,OAAA;QACAE,gBAAA,EAAAH,YAAA,CAAAC,OAAA;QACAG,sBAAA,EAAAJ,YAAA,CAAAC,OAAA;QACAI,gBAAA,EAAAC,QAAA,CAAAN,YAAA,CAAAC,OAAA;QACAM,UAAA,EAAAP,YAAA,CAAAC,OAAA;QACAO,WAAA,EAAAR,YAAA,CAAAC,OAAA;QACAQ,SAAA,EAAAT,YAAA,CAAAC,OAAA;MACA;IACA;EACA;EACAS,OAAA;IACA,MAAAC,YAAA;MACA,UAAAb,QAAA,CAAAC,WAAA;QACA,KAAAa,QAAA,CAAAC,OAAA;QACA;MACA;MAEA,KAAAD,QAAA,CAAAE,IAAA;MACA;QACA,MAAAC,QAAA,SAAAC,KAAA,SAAAC,UAAA;UACAC,MAAA;UACAC,OAAA;YACA;UACA;UACAC,IAAA,EAAAC,IAAA,CAAAC,SAAA;YAAAC,IAAA,OAAAzB,QAAA,CAAAC;UAAA;QACA;QAEA,KAAAgB,QAAA,CAAAS,EAAA,YAAAC,KAAA;QAEA,MAAAC,MAAA,SAAAX,QAAA,CAAAY,IAAA;QACA,IAAAD,MAAA,CAAAE,OAAA;UACA,KAAAhB,QAAA,CAAAgB,OAAA;QACA;UACA,UAAAH,KAAA,CAAAC,MAAA,CAAAG,OAAA;QACA;MACA,SAAAC,KAAA;QACA,KAAAlB,QAAA,CAAAkB,KAAA,mBAAAA,KAAA,CAAAD,OAAA;MACA;IACA;IAEAE,oBAAA;MACA,KAAAC,kBAAA;MACA,wBAAAlC,QAAA;QACA,MAAAW,SAAA,QAAAX,QAAA,CAAAW,SAAA;QACA,MAAAwB,MAAA,GAAAjC,YAAA,CAAAC,OAAA;QACA,IAAAQ,SAAA,IAAAwB,MAAA;UACA,MAAAC,MAAA,GAAAC,MAAA,CAAAC,QAAA,CAAAC,IAAA,CAAAC,OAAA,cAAAL,MAAA;UACAE,MAAA,CAAAI,OAAA,CAAAC,YAAA,WAAAN,MAAA;QACA;UACA,MAAAO,UAAA,GAAAN,MAAA,CAAAC,QAAA,CAAAC,IAAA;UACA,MAAAH,MAAA,GAAAO,UAAA,CAAAH,OAAA;UACAH,MAAA,CAAAI,OAAA,CAAAC,YAAA,WAAAN,MAAA;QACA;MACA;IACA;IAEAQ,aAAA;MACA,KAAAC,KAAA,CAAAC,YAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAd,kBAAA;UACA,KAAApB,QAAA,CAAAgB,OAAA;QACA;MACA;IACA;IAEAI,mBAAA;MACAhC,YAAA,CAAA+C,OAAA,qBAAAjD,QAAA,CAAAC,WAAA;MACAC,YAAA,CAAA+C,OAAA,2BAAAjD,QAAA,CAAAI,iBAAA;MACAF,YAAA,CAAA+C,OAAA,0BAAAjD,QAAA,CAAAK,gBAAA;MACAH,YAAA,CAAA+C,OAAA,gCAAAjD,QAAA,CAAAM,sBAAA;MACAJ,YAAA,CAAA+C,OAAA,0BAAAjD,QAAA,CAAAO,gBAAA;MACAL,YAAA,CAAA+C,OAAA,oBAAAjD,QAAA,CAAAS,UAAA;MACAP,YAAA,CAAA+C,OAAA,qBAAAjD,QAAA,CAAAU,WAAA;MACAR,YAAA,CAAA+C,OAAA,mBAAAjD,QAAA,CAAAW,SAAA;IACA;IAEAQ,WAAA;MACA,MAAAR,SAAA,GAAAT,YAAA,CAAAC,OAAA;MACA,MAAAgC,MAAA,GAAAjC,YAAA,CAAAC,OAAA;MACA,OAAAQ,SAAA,IAAAwB,MAAA,aAAAA,MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}