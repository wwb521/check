{"ast":null,"code":"export default {\n  name: 'PageHeader',\n  data() {\n    return {\n      localIp: '',\n      streamCount: 0\n    };\n  },\n  mounted() {\n    this.getLocalIp();\n    this.$root.$on('stream-list-updated', this.updateStreamCount);\n  },\n  beforeDestroy() {\n    this.$root.$off('stream-list-updated', this.updateStreamCount);\n  },\n  methods: {\n    async getLocalIp() {\n      try {\n        const response = await fetch('http://localhost:8080/api/local-ip');\n        if (response.ok) {\n          this.localIp = await response.text();\n        }\n      } catch (error) {\n        console.error('获取IP失败:', error);\n      }\n    },\n    copyIp() {\n      if (this.localIp) {\n        const textarea = document.createElement('textarea');\n        textarea.value = this.localIp;\n        document.body.appendChild(textarea);\n        textarea.select();\n        try {\n          document.execCommand('copy');\n          this.$message.success('IP地址已复制');\n        } catch (err) {\n          this.$message.error('复制失败');\n        } finally {\n          document.body.removeChild(textarea);\n        }\n      }\n    },\n    updateStreamCount(count) {\n      this.streamCount = count;\n    }\n  }\n};","map":{"version":3,"names":["name","data","localIp","streamCount","mounted","getLocalIp","$root","$on","updateStreamCount","beforeDestroy","$off","methods","response","fetch","ok","text","error","console","copyIp","textarea","document","createElement","value","body","appendChild","select","execCommand","$message","success","err","removeChild","count"],"sources":["src/components/Header.vue"],"sourcesContent":["<template>\r\n  <div class=\"header\">\r\n    <div class=\"logo\">\r\n      <i class=\"el-icon-video-camera\" style=\"font-size: 24px;\"></i>\r\n      <span class=\"title\">直播源检测工具</span>\r\n      <el-tag \r\n        type=\"success\" \r\n        size=\"small\"\r\n        class=\"stream-count\">\r\n        直播源: {{ streamCount }}\r\n      </el-tag>\r\n    </div>\r\n    <div class=\"ip-info\" v-if=\"localIp\">\r\n      <el-tooltip effect=\"dark\" placement=\"bottom\">\r\n        <div slot=\"content\">\r\n          <div>本机IP地址</div>\r\n          <div>点击复制</div>\r\n        </div>\r\n        <el-tag \r\n          type=\"info\" \r\n          @click=\"copyIp\"\r\n          style=\"cursor: pointer\">\r\n          {{ localIp }}\r\n        </el-tag>\r\n      </el-tooltip>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'PageHeader',\r\n  data() {\r\n    return {\r\n      localIp: '',\r\n      streamCount: 0\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getLocalIp()\r\n    this.$root.$on('stream-list-updated', this.updateStreamCount)\r\n  },\r\n  beforeDestroy() {\r\n    this.$root.$off('stream-list-updated', this.updateStreamCount)\r\n  },\r\n  methods: {\r\n    async getLocalIp() {\r\n      try {\r\n        const response = await fetch('http://localhost:8080/api/local-ip')\r\n        if (response.ok) {\r\n          this.localIp = await response.text()\r\n        }\r\n      } catch (error) {\r\n        console.error('获取IP失败:', error)\r\n      }\r\n    },\r\n    copyIp() {\r\n      if (this.localIp) {\r\n        const textarea = document.createElement('textarea')\r\n        textarea.value = this.localIp\r\n        document.body.appendChild(textarea)\r\n        textarea.select()\r\n        \r\n        try {\r\n          document.execCommand('copy')\r\n          this.$message.success('IP地址已复制')\r\n        } catch (err) {\r\n          this.$message.error('复制失败')\r\n        } finally {\r\n          document.body.removeChild(textarea)\r\n        }\r\n      }\r\n    },\r\n    updateStreamCount(count) {\r\n      this.streamCount = count\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.header {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 20px;\r\n}\r\n\r\n.logo {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.title {\r\n  margin-left: 10px;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n}\r\n\r\n.stream-count {\r\n  margin-left: 15px;\r\n  font-weight: normal;\r\n}\r\n\r\n.ip-info {\r\n  margin-left: auto;\r\n}\r\n\r\n.ip-info .el-tag {\r\n  font-size: 14px;\r\n  height: 28px;\r\n  line-height: 28px;\r\n  padding: 0 10px;\r\n}\r\n\r\n.ip-info .el-tag:hover {\r\n  opacity: 0.8;\r\n}\r\n</style> "],"mappings":"AA8BA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,WAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,UAAA;IACA,KAAAC,KAAA,CAAAC,GAAA,6BAAAC,iBAAA;EACA;EACAC,cAAA;IACA,KAAAH,KAAA,CAAAI,IAAA,6BAAAF,iBAAA;EACA;EACAG,OAAA;IACA,MAAAN,WAAA;MACA;QACA,MAAAO,QAAA,SAAAC,KAAA;QACA,IAAAD,QAAA,CAAAE,EAAA;UACA,KAAAZ,OAAA,SAAAU,QAAA,CAAAG,IAAA;QACA;MACA,SAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,YAAAA,KAAA;MACA;IACA;IACAE,OAAA;MACA,SAAAhB,OAAA;QACA,MAAAiB,QAAA,GAAAC,QAAA,CAAAC,aAAA;QACAF,QAAA,CAAAG,KAAA,QAAApB,OAAA;QACAkB,QAAA,CAAAG,IAAA,CAAAC,WAAA,CAAAL,QAAA;QACAA,QAAA,CAAAM,MAAA;QAEA;UACAL,QAAA,CAAAM,WAAA;UACA,KAAAC,QAAA,CAAAC,OAAA;QACA,SAAAC,GAAA;UACA,KAAAF,QAAA,CAAAX,KAAA;QACA;UACAI,QAAA,CAAAG,IAAA,CAAAO,WAAA,CAAAX,QAAA;QACA;MACA;IACA;IACAX,kBAAAuB,KAAA;MACA,KAAA5B,WAAA,GAAA4B,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}