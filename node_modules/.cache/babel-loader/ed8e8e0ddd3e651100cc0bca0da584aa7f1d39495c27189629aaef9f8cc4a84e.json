{"ast":null,"code":"export default {\n  name: 'SettingsPage',\n  data() {\n    return {\n      settings: {\n        ffprobePath: localStorage.getItem('ffprobePath') || ''\n      }\n    };\n  },\n  methods: {\n    async testFfprobe() {\n      if (!this.settings.ffprobePath) {\n        this.$message.warning('请先输入FFprobe路径');\n        return;\n      }\n      this.$message.info('正在测试FFprobe...');\n      try {\n        // 这里需要后端API支持\n        const response = await fetch('/api/test-ffprobe', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            path: this.settings.ffprobePath\n          })\n        });\n        if (!response.ok) throw new Error('请求失败');\n        const result = await response.json();\n        if (result.success) {\n          this.$message.success('FFprobe测试成功');\n        } else {\n          throw new Error(result.message);\n        }\n      } catch (error) {\n        this.$message.error('FFprobe测试失败: ' + error.message);\n      }\n    },\n    saveSettings() {\n      this.$refs.settingsForm.validate(valid => {\n        if (valid) {\n          localStorage.setItem('ffprobePath', this.settings.ffprobePath);\n          this.$message.success('设置保存成功');\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","settings","ffprobePath","localStorage","getItem","methods","testFfprobe","$message","warning","info","response","fetch","method","headers","body","JSON","stringify","path","ok","Error","result","json","success","message","error","saveSettings","$refs","settingsForm","validate","valid","setItem"],"sources":["src/views/Settings.vue"],"sourcesContent":["<template>\r\n  <div class=\"settings\">\r\n    <el-card class=\"settings-card\">\r\n      <div slot=\"header\">\r\n        <span>系统设置</span>\r\n      </div>\r\n      \r\n      <el-form :model=\"settings\" ref=\"settingsForm\" label-width=\"120px\">\r\n        <el-form-item \r\n          label=\"FFprobe路径\" \r\n          prop=\"ffprobePath\"\r\n          :rules=\"[\r\n            { required: true, message: '请输入FFprobe路径', trigger: 'blur' }\r\n          ]\">\r\n          <el-input \r\n            v-model=\"settings.ffprobePath\" \r\n            placeholder=\"请输入FFprobe可执行文件的完整路径\">\r\n            <el-button slot=\"append\" @click=\"testFfprobe\">测试</el-button>\r\n          </el-input>\r\n        </el-form-item>\r\n        \r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"saveSettings\">保存设置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'SettingsPage',\r\n  data() {\r\n    return {\r\n      settings: {\r\n        ffprobePath: localStorage.getItem('ffprobePath') || ''\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    async testFfprobe() {\r\n      if (!this.settings.ffprobePath) {\r\n        this.$message.warning('请先输入FFprobe路径')\r\n        return\r\n      }\r\n\r\n      this.$message.info('正在测试FFprobe...')\r\n      try {\r\n        // 这里需要后端API支持\r\n        const response = await fetch('/api/test-ffprobe', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ path: this.settings.ffprobePath })\r\n        })\r\n        \r\n        if (!response.ok) throw new Error('请求失败')\r\n        \r\n        const result = await response.json()\r\n        if (result.success) {\r\n          this.$message.success('FFprobe测试成功')\r\n        } else {\r\n          throw new Error(result.message)\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('FFprobe测试失败: ' + error.message)\r\n      }\r\n    },\r\n    \r\n    saveSettings() {\r\n      this.$refs.settingsForm.validate(valid => {\r\n        if (valid) {\r\n          localStorage.setItem('ffprobePath', this.settings.ffprobePath)\r\n          this.$message.success('设置保存成功')\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.settings {\r\n  padding: 20px;\r\n}\r\n\r\n.settings-card {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n</style> "],"mappings":"AA8BA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;QACAC,WAAA,EAAAC,YAAA,CAAAC,OAAA;MACA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,YAAA;MACA,UAAAL,QAAA,CAAAC,WAAA;QACA,KAAAK,QAAA,CAAAC,OAAA;QACA;MACA;MAEA,KAAAD,QAAA,CAAAE,IAAA;MACA;QACA;QACA,MAAAC,QAAA,SAAAC,KAAA;UACAC,MAAA;UACAC,OAAA;YACA;UACA;UACAC,IAAA,EAAAC,IAAA,CAAAC,SAAA;YAAAC,IAAA,OAAAhB,QAAA,CAAAC;UAAA;QACA;QAEA,KAAAQ,QAAA,CAAAQ,EAAA,YAAAC,KAAA;QAEA,MAAAC,MAAA,SAAAV,QAAA,CAAAW,IAAA;QACA,IAAAD,MAAA,CAAAE,OAAA;UACA,KAAAf,QAAA,CAAAe,OAAA;QACA;UACA,UAAAH,KAAA,CAAAC,MAAA,CAAAG,OAAA;QACA;MACA,SAAAC,KAAA;QACA,KAAAjB,QAAA,CAAAiB,KAAA,mBAAAA,KAAA,CAAAD,OAAA;MACA;IACA;IAEAE,aAAA;MACA,KAAAC,KAAA,CAAAC,YAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA1B,YAAA,CAAA2B,OAAA,qBAAA7B,QAAA,CAAAC,WAAA;UACA,KAAAK,QAAA,CAAAe,OAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}