{"ast":null,"code":"export default {\n  name: 'StreamSource',\n  data() {\n    return {\n      streamUrl: '',\n      dialogVisible: false,\n      generatedLink: ''\n    };\n  },\n  methods: {\n    generateLink() {\n      // 将输入的内容进行Base64编码\n      const encodedContent = btoa(encodeURIComponent(this.streamUrl.trim()));\n      // 生成链接（这里使用一个示例域名，您需要替换为实际的域名）\n      this.generatedLink = `${window.location.origin}/stream-check?source=${encodedContent}`;\n      this.dialogVisible = true;\n    },\n    copyLink() {\n      navigator.clipboard.writeText(this.generatedLink).then(() => {\n        this.$message({\n          message: '链接已复制到剪贴板',\n          type: 'success',\n          duration: 2000\n        });\n      }).catch(() => {\n        this.$message({\n          message: '复制失败，请手动复制',\n          type: 'error',\n          duration: 2000\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","streamUrl","dialogVisible","generatedLink","methods","generateLink","encodedContent","btoa","encodeURIComponent","trim","window","location","origin","copyLink","navigator","clipboard","writeText","then","$message","message","type","duration","catch"],"sources":["src/views/StreamSource.vue"],"sourcesContent":["<template>\r\n  <div class=\"stream-source-container\">\r\n    <el-card class=\"box-card\">\r\n      <div slot=\"header\" class=\"card-header\">\r\n        <span>直播源整合</span>\r\n        <el-button type=\"primary\" @click=\"generateLink\" :disabled=\"!streamUrl.trim()\">\r\n          <i class=\"el-icon-link\"></i> 生成链接\r\n        </el-button>\r\n      </div>\r\n      <div class=\"card-content\">\r\n        <div class=\"input-section\">\r\n          <el-input\r\n            v-model=\"streamUrl\"\r\n            type=\"textarea\"\r\n            :rows=\"8\"\r\n            placeholder=\"请输入直播源地址，每行一个地址\"\r\n            :autosize=\"{ minRows: 8, maxRows: 15 }\"\r\n          ></el-input>\r\n          <div class=\"input-tip\">支持多个地址，每行输入一个地址</div>\r\n        </div>\r\n      </div>\r\n    </el-card>\r\n\r\n    <!-- 生成链接对话框 -->\r\n    <el-dialog\r\n      title=\"生成的链接\"\r\n      :visible.sync=\"dialogVisible\"\r\n      width=\"50%\"\r\n      :close-on-click-modal=\"false\"\r\n    >\r\n      <el-input\r\n        v-model=\"generatedLink\"\r\n        type=\"textarea\"\r\n        :rows=\"3\"\r\n        readonly\r\n        :autosize=\"{ minRows: 3, maxRows: 5 }\"\r\n      ></el-input>\r\n      <div class=\"dialog-footer\" slot=\"footer\">\r\n        <el-button type=\"primary\" @click=\"copyLink\" size=\"small\">\r\n          <i class=\"el-icon-document-copy\"></i> 复制链接\r\n        </el-button>\r\n        <el-button @click=\"dialogVisible = false\" size=\"small\">关闭</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'StreamSource',\r\n  data() {\r\n    return {\r\n      streamUrl: '',\r\n      dialogVisible: false,\r\n      generatedLink: ''\r\n    }\r\n  },\r\n  methods: {\r\n    generateLink() {\r\n      // 将输入的内容进行Base64编码\r\n      const encodedContent = btoa(encodeURIComponent(this.streamUrl.trim()));\r\n      // 生成链接（这里使用一个示例域名，您需要替换为实际的域名）\r\n      this.generatedLink = `${window.location.origin}/stream-check?source=${encodedContent}`;\r\n      this.dialogVisible = true;\r\n    },\r\n    copyLink() {\r\n      navigator.clipboard.writeText(this.generatedLink)\r\n        .then(() => {\r\n          this.$message({\r\n            message: '链接已复制到剪贴板',\r\n            type: 'success',\r\n            duration: 2000\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.$message({\r\n            message: '复制失败，请手动复制',\r\n            type: 'error',\r\n            duration: 2000\r\n          });\r\n        });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.stream-source-container {\r\n  padding: 20px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.card-content {\r\n  min-height: 300px;\r\n}\r\n\r\n.input-section {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px 0;\r\n}\r\n\r\n.input-tip {\r\n  font-size: 12px;\r\n  color: #909399;\r\n  margin-top: 8px;\r\n  line-height: 1.4;\r\n}\r\n\r\n:deep(.el-textarea__inner) {\r\n  font-family: 'Consolas', 'Monaco', monospace;\r\n  font-size: 14px;\r\n  line-height: 1.6;\r\n}\r\n\r\n.dialog-footer {\r\n  text-align: center;\r\n}\r\n\r\n:deep(.el-dialog__body) {\r\n  padding-bottom: 10px;\r\n}\r\n</style> "],"mappings":"AAgDA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,aAAA;MACAC,aAAA;IACA;EACA;EACAC,OAAA;IACAC,aAAA;MACA;MACA,MAAAC,cAAA,GAAAC,IAAA,CAAAC,kBAAA,MAAAP,SAAA,CAAAQ,IAAA;MACA;MACA,KAAAN,aAAA,MAAAO,MAAA,CAAAC,QAAA,CAAAC,MAAA,wBAAAN,cAAA;MACA,KAAAJ,aAAA;IACA;IACAW,SAAA;MACAC,SAAA,CAAAC,SAAA,CAAAC,SAAA,MAAAb,aAAA,EACAc,IAAA;QACA,KAAAC,QAAA;UACAC,OAAA;UACAC,IAAA;UACAC,QAAA;QACA;MACA,GACAC,KAAA;QACA,KAAAJ,QAAA;UACAC,OAAA;UACAC,IAAA;UACAC,QAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}